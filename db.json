{"meta":{"version":1,"warehouse":"3.0.2"},"models":{"Asset":[{"_id":"themes/yun/source/Yun.png","path":"Yun.png","modified":0,"renderable":1},{"_id":"themes/yun/source/yun-favicon.ico","path":"yun-favicon.ico","modified":0,"renderable":1},{"_id":"themes/yun/source/yun.svg","path":"yun.svg","modified":0,"renderable":1},{"_id":"themes/yun/source/js/utils.js","path":"js/utils.js","modified":0,"renderable":1},{"_id":"themes/yun/source/css/hexo-theme-yun.styl","path":"css/hexo-theme-yun.styl","modified":0,"renderable":1},{"_id":"themes/yun/source/js/hexo-theme-yun.js","path":"js/hexo-theme-yun.js","modified":0,"renderable":1},{"_id":"themes/yun/source/js/say.js","path":"js/say.js","modified":0,"renderable":1},{"_id":"themes/yun/source/js/sidebar.js","path":"js/sidebar.js","modified":0,"renderable":1},{"_id":"themes/yun/source/js/search/algolia-search.js","path":"js/search/algolia-search.js","modified":0,"renderable":1},{"_id":"themes/yun/source/js/search/index.js","path":"js/search/index.js","modified":0,"renderable":1},{"_id":"themes/yun/source/js/search/local-search.js","path":"js/search/local-search.js","modified":0,"renderable":1},{"_id":"themes/yun/source/js/ui/banner.js","path":"js/ui/banner.js","modified":0,"renderable":1},{"_id":"themes/yun/source/js/ui/fireworks.js","path":"js/ui/fireworks.js","modified":0,"renderable":1}],"Cache":[{"_id":"themes/yun/.gitignore","hash":"7abb942cdb57d4dcaebcb3a587eeebf1f0bf1fe3","modified":1587090706410},{"_id":"themes/yun/LICENSE","hash":"fa221ceba871b104543fa698b80750fc19552fd2","modified":1587090706410},{"_id":"themes/yun/README.md","hash":"0802fc34b5cac6cead896941e2f46a4639677052","modified":1587090706410},{"_id":"themes/yun/_config.yml","hash":"b8b2bb7e4581e60f94230ce2663e9a70bafb96d7","modified":1587534201288},{"_id":"themes/yun/package.json","hash":"29a04d8d97fa4d5a5a97750c393a2e2b906d98a2","modified":1587090706426},{"_id":"source/_data/yun.yml","hash":"a269ef00e7d08a4157d88488e2e1b267017b8237","modified":1587536328394},{"_id":"source/_posts/NextJs.md","hash":"c736e6ab3c2002a18c5d0e85e8f615e0696b9918","modified":1587536108168},{"_id":"source/_posts/vue_deep.md","hash":"1d7e220873e2657d9d4bf2a8add6ce2493e5ebf4","modified":1587102823316},{"_id":"source/_posts/flutter_code.md","hash":"c9f68efbc97f74dbddf21f15fc9a50cb5ef91fb4","modified":1587536066342},{"_id":"source/categories/index.md","hash":"c0731ae6ae1bfb30c7535201ea60d9453293dc42","modified":1587090706374},{"_id":"source/links/index.md","hash":"c5825d000a2594fb0db53706a30cc036c3201121","modified":1587090706375},{"_id":"source/tags/flutter.md","hash":"6cfa9cbc7d9e5d96966b11466154d13591f61f5a","modified":1587524961860},{"_id":"source/tags/next.md","hash":"f440e07e1c1e34c166b757a54fc7baea338323b0","modified":1587090706375},{"_id":"source/tags/index.md","hash":"29410b685cea918ae12a55f4f17192b5eaeb8ee6","modified":1587090706375},{"_id":"source/tags/react.md","hash":"1ccb69d643ab0aa6e3deece338f510d0cd5a9765","modified":1587090706376},{"_id":"themes/yun/docs/README.md","hash":"b0244abf7a7b0a5f12418c4d699873f7afa1d568","modified":1587090706410},{"_id":"themes/yun/languages/default.yml","hash":"e56bebd19d2abd1698e9aa87d337941957977468","modified":1587090706410},{"_id":"themes/yun/languages/en.yml","hash":"9bea5e5991e90473953c049f0eacef77e3393a31","modified":1587090706410},{"_id":"themes/yun/languages/zh-CN.yml","hash":"b1602795952f5d694b1f3e7dc8799c48ec0da787","modified":1587090706410},{"_id":"themes/yun/layout/404.pug","hash":"4f4a02964735414805510857bcd2bec74504e114","modified":1587090706410},{"_id":"themes/yun/layout/archive.pug","hash":"1c53a0ce5c67bf51a4ae633abca81762d8c1647c","modified":1587090706426},{"_id":"themes/yun/layout/category.pug","hash":"1e83e46870e75c54c4f16b00159ad5c95b635fb8","modified":1587090706426},{"_id":"themes/yun/layout/girls.pug","hash":"effc01bf2ff7bf524673ac2941fc638f52ce6221","modified":1587090706426},{"_id":"themes/yun/layout/index.pug","hash":"3ba041ab286e05e08c6a8bbb2be4e63edbc9d51a","modified":1587090706426},{"_id":"themes/yun/layout/links.pug","hash":"79eac36cea04e681fe695601bad793d7561373b8","modified":1587090706426},{"_id":"themes/yun/layout/page.pug","hash":"cd65a94a4e73b8cb14a55e41e10881ef4865ce94","modified":1587090706426},{"_id":"themes/yun/layout/post.pug","hash":"56e0b5b64036ab5db3fe39a6725c9d8cf59673aa","modified":1587090706426},{"_id":"themes/yun/layout/tag.pug","hash":"b51ddd6bbc19b059e2baec2623008d94a8da301e","modified":1587090706426},{"_id":"themes/yun/source/Yun.png","hash":"b8ae426fa5dd7579d23d189c222641d812c51c0a","modified":1587090706426},{"_id":"themes/yun/source/yun-favicon.ico","hash":"80866f3f79840bd9426a8fee84e3ea19ef20c88b","modified":1587090706460},{"_id":"themes/yun/source/yun.svg","hash":"d4e8675ec7b61475ec10009d90c1ac1800d62aba","modified":1587090706461},{"_id":"themes/yun/source/js/utils.js","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1587090706460},{"_id":"themes/yun/docs/.vuepress/config.js","hash":"7a7d451d6bf70b0f18e7802c66986e197b8653eb","modified":1587090706410},{"_id":"themes/yun/docs/en/README.md","hash":"e73562118ea1b82820106316908ed9579ff98123","modified":1587090706410},{"_id":"themes/yun/docs/guide/README.md","hash":"613dac8385f71ec0ccdd4c2384bf2b1584020e80","modified":1587090706410},{"_id":"themes/yun/docs/guide/Todo.md","hash":"9baefd7a58bf26f9d0ce71ed5e26d1b4a5d02783","modified":1587090706410},{"_id":"themes/yun/docs/guide/about.md","hash":"4945ffc6af68fc0d15655291ba74545d772e06a8","modified":1587090706410},{"_id":"themes/yun/docs/guide/additional-package-support.md","hash":"89d75faa7603422c1f91004ea55c8fe371f63bb8","modified":1587090706410},{"_id":"themes/yun/docs/guide/config.md","hash":"b14ad3842aaeef175cea88ec1c3c08c44e38ae86","modified":1587090706410},{"_id":"themes/yun/docs/guide/icon.md","hash":"34ee6247384a4db1cb5fdfeee437b3a29e60ffb6","modified":1587090706410},{"_id":"themes/yun/docs/guide/faq.md","hash":"bf8909200cf088ff78d2e0866de627f4df213adf","modified":1587090706410},{"_id":"themes/yun/docs/guide/page.md","hash":"2b477556c10b916f826c5c64566e98b4a1793f1e","modified":1587090706410},{"_id":"themes/yun/docs/guide/sponsor.md","hash":"053e5a97f49b628133868c464c5c86ba03dd70d1","modified":1587090706410},{"_id":"themes/yun/docs/guide/third-party-support.md","hash":"8312830927558531ce52fd9acb46fa4f147b368c","modified":1587090706410},{"_id":"themes/yun/layout/_partial/background.pug","hash":"6bf87eb5ae1c6a85e1ed1ea727d1b0f85950f92d","modified":1587090706410},{"_id":"themes/yun/layout/_partial/banner.pug","hash":"6740e92c24e982fc1bb8fa7364c01902658d13c4","modified":1587090706410},{"_id":"themes/yun/layout/_partial/footer.pug","hash":"bc940198de24c20ae916308f996320e3f7bc827d","modified":1587534614485},{"_id":"themes/yun/layout/_partial/head.pug","hash":"0f4e1b5904a07d2680e8f15da66e5997ced2f50b","modified":1587090706410},{"_id":"themes/yun/layout/_partial/pagination.pug","hash":"b55b6a99b105447b4a6c982fa258680a2a9a34a9","modified":1587090706410},{"_id":"themes/yun/layout/_partial/layout.pug","hash":"bc564d1034af54f638746079e9ef2c42c886f55c","modified":1587090706410},{"_id":"themes/yun/layout/_partial/recent-posts.pug","hash":"2f0c2e83543c9bb90632366f4f8b1f5ed4c61242","modified":1587090706426},{"_id":"themes/yun/layout/_partial/sidebar.pug","hash":"cd42f66064e9af55f7282cd50370b02cfb120a48","modified":1587090706426},{"_id":"themes/yun/layout/_mixin/post-collapse.pug","hash":"f7715b75121ab9bcab724b0bb41d96436855a2d2","modified":1587090706410},{"_id":"themes/yun/layout/_third-party/aplayer.pug","hash":"ecb25b0313932aa6e50047e9208f09215066a2d8","modified":1587090706426},{"_id":"themes/yun/layout/_third-party/cdn.pug","hash":"313b69c691202b6e148f6ddb55f6a0eef6edb497","modified":1587090706426},{"_id":"themes/yun/layout/_third-party/icon.pug","hash":"18ee2c33b4e6ef71c31d7955f9a20789fe6aa9e4","modified":1587090706426},{"_id":"themes/yun/layout/_third-party/katex.pug","hash":"782255a8ed7fa4e396b2df0313e541d445b0d777","modified":1587090706426},{"_id":"themes/yun/layout/_widget/back-to-top.pug","hash":"d5a24af60ce7d1283f10878ca1e1c88d0e09e4cd","modified":1587090706426},{"_id":"themes/yun/layout/_widget/index.pug","hash":"38a1c70bb69776d3fdd6e2670219a070a7e97bc5","modified":1587090706426},{"_id":"themes/yun/layout/_widget/mourn.pug","hash":"7b94847cf8b456558c6b91312092d269586831e1","modified":1587090706426},{"_id":"themes/yun/layout/_widget/notice.pug","hash":"346ada39ba6586cb631ac5b1f129683f3ee015f4","modified":1587090706426},{"_id":"themes/yun/layout/_widget/say.pug","hash":"cc4fd0d36a72a42f191dcd5e1dbd761a7a25f991","modified":1587090706426},{"_id":"themes/yun/scripts/events/config.js","hash":"3c9a210659132ca4048e91b31dff003389e3cb0d","modified":1587090706426},{"_id":"themes/yun/scripts/events/index.js","hash":"5e9e1ea1d196e3eb31c288060a62345d34984283","modified":1587090706426},{"_id":"themes/yun/scripts/filters/index.js","hash":"b0ec6551d78076c55f516bc04544f258c564aa62","modified":1587090706426},{"_id":"themes/yun/scripts/helpers/engine.js","hash":"dda789bf09c0fb0e87a257a0b5f0cb9cb1fbee5a","modified":1587090706426},{"_id":"themes/yun/scripts/helpers/yun-config.js","hash":"1086fbb4e3c4c6ae237a3ee231987d8d82997547","modified":1587090706426},{"_id":"themes/yun/source/css/hexo-theme-yun.styl","hash":"9ee005e401212cf814b3fab47e5b80581e72fb4b","modified":1587090706456},{"_id":"themes/yun/source/js/hexo-theme-yun.js","hash":"361b789a87ddf80d1d21e29309c3d8a82b78063c","modified":1587090706456},{"_id":"themes/yun/source/js/say.js","hash":"b39c0a0be7fe77713a2a40cf36c6fa1fc9fdd554","modified":1587090706457},{"_id":"themes/yun/source/js/sidebar.js","hash":"35f7d42ddac3b1dfabcc2deeeb2a8d48acd7d6cf","modified":1587090706458},{"_id":"themes/yun/docs/.vuepress/styles/palette.styl","hash":"a53bb0d3af7d286e68e5149f3c530912f61dd69c","modified":1587090706410},{"_id":"themes/yun/docs/en/guide/README.md","hash":"2a65b74f4688b8e7e5b75921125462e935fc2fbc","modified":1587090706410},{"_id":"themes/yun/layout/_partial/page/page-header.pug","hash":"8d267ce973d0b1e8ee3d1b92e076dbb170421b00","modified":1587090706410},{"_id":"themes/yun/layout/_partial/post/post-classify.pug","hash":"b4c86904eecf74e1f34cdc42e4fed6ec3a954444","modified":1587090706410},{"_id":"themes/yun/layout/_partial/post/post-edit.pug","hash":"2b7d4c210815ddc63c5b6fc5b5fd6a348e75093f","modified":1587090706410},{"_id":"themes/yun/layout/_partial/post/post-copyright.pug","hash":"b01c70d2fe59bc8cbdb82c626fc679663f1104cd","modified":1587090706410},{"_id":"themes/yun/layout/_partial/post/post-meta.pug","hash":"10de3ec5e33463d7ad9b59b27274e30f76f7de3a","modified":1587090706410},{"_id":"themes/yun/layout/_partial/post/post-nav.pug","hash":"8e9766451632238a59a70bf3d209f6e283312124","modified":1587090706410},{"_id":"themes/yun/layout/_partial/post/post-schema.pug","hash":"656153383ac65f16e868692783ba68547364bf0b","modified":1587090706426},{"_id":"themes/yun/layout/_partial/post/reward.pug","hash":"d4b9081fc4b2bf3bc364511cbc2eec5136dcc720","modified":1587090706426},{"_id":"themes/yun/layout/_third-party/adsense/google-adsense.pug","hash":"ae63305d776ebec0d88f91197b5c78cdaa401585","modified":1587090706426},{"_id":"themes/yun/layout/_third-party/analytics/busuanzi.pug","hash":"705abdbb8a0da4589b2fa1a4fc0b8533ec870978","modified":1587090706426},{"_id":"themes/yun/layout/_third-party/analytics/google-analytics.pug","hash":"581497ecca3e002ddf017a5dea1c66f237a98f0c","modified":1587090706426},{"_id":"themes/yun/layout/_third-party/analytics/valine-visitor.pug","hash":"519b2825300e5dd21ae984f932193bf6b9ab1173","modified":1587090706426},{"_id":"themes/yun/layout/_third-party/comments/github-issues.pug","hash":"2772d0e44da12c261e695e35f265af05f2cd75dc","modified":1587090706426},{"_id":"themes/yun/layout/_third-party/comments/minivaline.pug","hash":"b9432c2ca30a2c27ad2a6003677bffde4ff44d54","modified":1587090706426},{"_id":"themes/yun/layout/_third-party/comments/valine.pug","hash":"a7fbff2e788e11efb2bf9e88f0637e0aa9a8c478","modified":1587090706426},{"_id":"themes/yun/layout/_third-party/comments/index.pug","hash":"105fd36fdf73c5c7e94c1bd8788f13bb53fe4879","modified":1587090706426},{"_id":"themes/yun/layout/_third-party/seo/baidu-push.pug","hash":"5b08e856a6c75a9b4a5aafccf52b1b418dac0e38","modified":1587090706426},{"_id":"themes/yun/layout/_widget/search/algolia-search.pug","hash":"e15f78a38d386d57c1a19b4a760115bd14edbb0d","modified":1587090706426},{"_id":"themes/yun/layout/_widget/search/index.pug","hash":"eb4b0736993751f3cbe6913a7f9a1bf22b195ac2","modified":1587090706426},{"_id":"themes/yun/layout/_widget/search/local-search.pug","hash":"d2ba600623043b2410f379fd7ba3cc75329ff408","modified":1587090706426},{"_id":"themes/yun/source/css/_components/button.styl","hash":"bdb399508d2b3bfe5d5d05c3f75d8491de49a2b0","modified":1587090706426},{"_id":"themes/yun/source/css/_components/card.styl","hash":"8e959430b3c05ef8dfb9143c05fadf1ce247a9c7","modified":1587090706426},{"_id":"themes/yun/source/css/_components/menu.styl","hash":"c6d35dbc05af9c672ebaca1d62f79f76fbfa9a38","modified":1587090706426},{"_id":"themes/yun/source/css/_components/scrollbar.styl","hash":"3e332ae27d3aeab1496079cd509649ceccc0f4b5","modified":1587090706443},{"_id":"themes/yun/source/css/_components/ui.styl","hash":"82b8f4ad20baa5b8173b84fd8381cbf89338428b","modified":1587090706445},{"_id":"themes/yun/source/css/_extend/girls.styl","hash":"0b0f22213c02131bb12392dd804d1eea5fb6b25b","modified":1587090706446},{"_id":"themes/yun/source/css/_global/index.styl","hash":"86d224d552b85ad5963a358913c2f41ee9f4b464","modified":1587090706447},{"_id":"themes/yun/source/css/_global/reset.styl","hash":"4277bb598fb9da1db6da039ec506e9ca35880d9b","modified":1587090706447},{"_id":"themes/yun/source/css/_layout/banner.styl","hash":"27516edc161126ee1a23f84ee941b79a9c3b0a27","modified":1587090706448},{"_id":"themes/yun/source/css/_layout/footer.styl","hash":"5a8f2e9405685b07a9b14c67a4a896cfbcb4bdb8","modified":1587090706449},{"_id":"themes/yun/source/css/_layout/grid.styl","hash":"21155945048d3395051175cd0e842b7b642dbc5d","modified":1587090706450},{"_id":"themes/yun/source/css/_layout/links.styl","hash":"bb6af5ff8fbbfc7853c81a7bf39b8d21be0d19ec","modified":1587090706450},{"_id":"themes/yun/source/css/_layout/main.styl","hash":"96a036061872efe46c0876b22d8803fab6ccb6ce","modified":1587090706450},{"_id":"themes/yun/source/css/_layout/page.styl","hash":"c50d57d1af0af9a43bff97a81b07c8047825ffb3","modified":1587090706451},{"_id":"themes/yun/source/css/_layout/pagination.styl","hash":"ba775b5bd3e6c35118fecceb286d86ae5293e668","modified":1587090706451},{"_id":"themes/yun/source/css/_layout/post.styl","hash":"eed075d44d07df2679ff7dd297a383e7614e7de7","modified":1587090706451},{"_id":"themes/yun/source/css/_mixins/base.styl","hash":"9a227ede3cd5a9829b31f6450dd37c21e00bdaf1","modified":1587090706452},{"_id":"themes/yun/source/css/_mixins/helper.styl","hash":"80fcaab47d6a1d202745342e3fc3ee5bf18f39b2","modified":1587090706452},{"_id":"themes/yun/source/css/_variables/_base.styl","hash":"8abb5ba8c35e89e7a814ff9c7d25ea21aa563246","modified":1587090706453},{"_id":"themes/yun/source/css/_widget/back-to-top.styl","hash":"ef5911aadaef439021823917b19eaef85e426fd2","modified":1587090706454},{"_id":"themes/yun/source/css/_variables/_colors.styl","hash":"1f71dd5fc633ed5b4f04392bb0d96bf358ad435c","modified":1587090706453},{"_id":"themes/yun/source/css/_widget/comment.styl","hash":"31c27799dfad61c98e872e79b4411a5c568ff793","modified":1587090706454},{"_id":"themes/yun/source/css/_widget/index.styl","hash":"21639fca93ea307fca7472772ff684100c676dd0","modified":1587090706454},{"_id":"themes/yun/source/css/_widget/say.styl","hash":"36b6680657267e1223bb74b04568a34563887bff","modified":1587090706455},{"_id":"themes/yun/source/css/_widget/notice.styl","hash":"8b1ca54535311f38b91433e5beadbeed02ecd28b","modified":1587090706454},{"_id":"themes/yun/source/js/search/algolia-search.js","hash":"a53109a5d3ac566050e0897765d24574e3e7e860","modified":1587090706457},{"_id":"themes/yun/source/js/search/index.js","hash":"bbf713a5cde5747dc46cc4fc8de08d8dcb59e66e","modified":1587090706457},{"_id":"themes/yun/source/js/search/local-search.js","hash":"39bb514361a7c56dea96310fe79d6b53440de241","modified":1587090706458},{"_id":"themes/yun/source/js/ui/banner.js","hash":"0b368c4dd7468778537bece5a9acc1891f7e8b03","modified":1587090706459},{"_id":"themes/yun/source/js/ui/fireworks.js","hash":"01e7b0fce3891f88b5f274f610e5e3ac50d1ac34","modified":1587090706460},{"_id":"themes/yun/source/css/_components/post/post-card.styl","hash":"7bf11114cb9a45cc8f5dcf33bd79f61b8ad6e655","modified":1587090706426},{"_id":"themes/yun/source/css/_components/post/post-collapse.styl","hash":"fe740b0de41797662b956c0bde4f3d75e25426f1","modified":1587090706442},{"_id":"themes/yun/source/css/_components/post/post-header.styl","hash":"77db5eab7550bd4a37f37d9e6ab870b6dc063d7a","modified":1587090706442},{"_id":"themes/yun/source/css/_components/post/post-markdown.styl","hash":"69e16a4d76e9186d063a126bf6de507f6ca01cd4","modified":1587536473324},{"_id":"themes/yun/source/css/_components/post/post-nav.styl","hash":"0c0e02053be83ffe1cec0154e6c527b13c0e09d5","modified":1587090706442},{"_id":"themes/yun/source/css/_components/post/post-reward.styl","hash":"508fe878ef756ebb38bc4930103b03b949df8ee4","modified":1587090706443},{"_id":"themes/yun/source/css/_components/post/post-table.styl","hash":"e294a41076c6937fdea92c69e3f6f5996151af98","modified":1587090706443},{"_id":"themes/yun/source/css/_components/sidebar/hamburger.styl","hash":"0fa240e8a71fdad14d3fd6b3fd49cf697d4c8153","modified":1587090706444},{"_id":"themes/yun/source/css/_components/sidebar/sidebar-nav.styl","hash":"24e0782c0ef99fd50b7eb5fe6e2ce2230bc97964","modified":1587090706444},{"_id":"themes/yun/source/css/_components/sidebar/sidebar-toc.styl","hash":"ef1e9858d5b7172ea16ed0e3224e59df5f8bfb4c","modified":1587090706444},{"_id":"themes/yun/source/css/_components/sidebar/site-overview.styl","hash":"9eed69258c315db35133b74d37e0ca98e30f89b2","modified":1587090706445},{"_id":"themes/yun/source/css/_components/sidebar/sidebar.styl","hash":"42b719a3efb284ba886c64aa4020301c1146f191","modified":1587090706445},{"_id":"themes/yun/source/css/_widget/search/algolia-search.styl","hash":"06f0649afd3b9c44397f5e9cab4f5d4a8b9a135e","modified":1587090706455},{"_id":"themes/yun/source/css/_widget/search/index.styl","hash":"bd4cfca7195631cc0a0c8c98f80b167ca3dc9c46","modified":1587090706455},{"_id":"themes/yun/source/css/_widget/search/local-search.styl","hash":"bbd1d20bb63cf52fad6f008319683df30e9528e4","modified":1587090706456},{"_id":"public/tags/flutter.html","hash":"0a3331834d6c8e005e5fd24df718ea210e8b3f30","modified":1587539179965},{"_id":"public/categories/index.html","hash":"e712f45315fb702f2d1c71422ea527c4081a1304","modified":1587539179965},{"_id":"public/links/index.html","hash":"9a3a4c7e54432e6235f56a94a7f0395de7367a85","modified":1587539179965},{"_id":"public/tags/next.html","hash":"7e1ec2a59f06bdfd3203d80d6d78e65a1663bb1c","modified":1587539179965},{"_id":"public/tags/index.html","hash":"b66ec81be11f9b48dc99eec0e61f69f1c2d1abe1","modified":1587539179965},{"_id":"public/tags/react.html","hash":"e0602b2a97dac0b96d97e8ec80a1f39ee9252d83","modified":1587539179965},{"_id":"public/archives/index.html","hash":"27ce6c97c05b927a3d9e7495d5113e9dfc59a183","modified":1587539179965},{"_id":"public/archives/2020/index.html","hash":"27ce6c97c05b927a3d9e7495d5113e9dfc59a183","modified":1587539179965},{"_id":"public/archives/2020/04/index.html","hash":"27ce6c97c05b927a3d9e7495d5113e9dfc59a183","modified":1587539179965},{"_id":"public/categories/web前端/index.html","hash":"b978188a2c0f36daec1b1bd97ea3f524b1ababfd","modified":1587539179965},{"_id":"public/index.html","hash":"99076bf99defc96a9a41e7b2107c567ebcb17c8d","modified":1587539179965},{"_id":"public/tags/next-js/index.html","hash":"778d4ee178126e0818ed92ccbbc5b40a9f37278e","modified":1587539179965},{"_id":"public/categories/flutter/index.html","hash":"5c5f7a5a5815972ddbfb99d63762484d17bdac21","modified":1587539179965},{"_id":"public/2020/04/12/NextJs/index.html","hash":"d7dd73353cb412800ac139abb875707ecbf05ed5","modified":1587539179965},{"_id":"public/2020/04/12/vue_deep/index.html","hash":"a70f584d5085dfb9fcb07bb440b21b243669a15c","modified":1587539179965},{"_id":"public/2020/04/12/flutter_code/index.html","hash":"e157e083974ffd622f186b3a764b70985da6b2c3","modified":1587539179965},{"_id":"public/tags/flutter/index.html","hash":"8b130424035bdbdc157a0041aeea00457c6a4b31","modified":1587539179965},{"_id":"public/tags/vue/index.html","hash":"3868cbe0858055c9c7a81e3617593c60c81a4d67","modified":1587539179965},{"_id":"public/Yun.png","hash":"b8ae426fa5dd7579d23d189c222641d812c51c0a","modified":1587539179965},{"_id":"public/yun.svg","hash":"d4e8675ec7b61475ec10009d90c1ac1800d62aba","modified":1587539179965},{"_id":"public/yun-favicon.ico","hash":"80866f3f79840bd9426a8fee84e3ea19ef20c88b","modified":1587539179965},{"_id":"public/css/prism-vsc-dark-plus.css","hash":"44403458fcded8b6e77c5993e594792e9083c578","modified":1587539179965},{"_id":"public/css/prism-line-numbers.css","hash":"e0db113a99e4a09d2161a539b1652d96e4a22fac","modified":1587539179965},{"_id":"public/js/utils.js","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1587539179965},{"_id":"public/js/say.js","hash":"fb33bdeb4f54e1437aa8c652c403e6529cad7606","modified":1587539179965},{"_id":"public/js/hexo-theme-yun.js","hash":"fb2fbef46b270469b5390fb87268ebc430b33447","modified":1587539179965},{"_id":"public/js/sidebar.js","hash":"3fa63b9727a860a8df8b4713637d1d86a07fb38d","modified":1587539179965},{"_id":"public/js/search/local-search.js","hash":"3c06972bfb70a496b2aaeeb6c57878fd226f80b7","modified":1587539179965},{"_id":"public/js/search/algolia-search.js","hash":"c5574f50fdb3410ddac133a3fd90fa20839c9656","modified":1587539179965},{"_id":"public/js/search/index.js","hash":"39d481a4dfd99775aba447f0ddbb24e4a096c691","modified":1587539179965},{"_id":"public/js/ui/banner.js","hash":"ce901fb675fd3c45396b7812452ece93915214e6","modified":1587539179965},{"_id":"public/js/ui/fireworks.js","hash":"3b4e5e029a35f5d58a30a1fd2350e77241720674","modified":1587539179965},{"_id":"public/css/hexo-theme-yun.css","hash":"ad33e67ee00b6e5419149c80a80e7141d4e200ba","modified":1587539179965}],"Category":[{"name":"web前端","_id":"ck9azt8me00046sv53qnegkcq"},{"name":"flutter","_id":"ck9azt8ml000e6sv5dl939mxg"}],"Data":[{"_id":"yun","data":{"avatar":{"url":"https://mirror-gold-cdn.xitu.io/168e0917d2a9255e07b?imageView2/1/w/180/h/180/q/85/format/webp/interlace/1","rounded":true,"opacity":1},"social":[{"name":"QQ","link":"https://wpa.qq.com/msgrd?v=3&uin=571590938&site=qq&menu=yes","icon":"icon-qq-line","color":"#12B7F5"},{"name":"GitHub","link":"https://github.com/unclemin","icon":"icon-github-line","color":"#181717"},{"name":"E-Mail","link":"mailto:571590938@qq.com","icon":"icon-mail-line","color":"#8E71C1"}],"banner":{"enable":true,"title":"刚刚好的小站","src":"/js/ui/banner.js"},"notice":{"enable":true,"content":"Thanks for look my blog."},"sidebar":{"bg_image":"https://cdn.jsdelivr.net/gh/YunYouJun/cdn/img/bg/stars-timing-1.jpg","bg_position":"bottom 3rem center"},"lazyload":{"enable":true},"reward_settings":{"enable":false,"icon":"icon-hand-coin-line","comment":"I'm so cute. Please give me money."},"reward":[{"name":"支付宝","path":"https://cdn.jsdelivr.net/gh/YunYouJun/cdn/img/donate/alipay-qrcode.jpg","color":"#00A3EE","icon":"icon-alipay-line"},{"name":"QQ 支付","path":"https://cdn.jsdelivr.net/gh/YunYouJun/cdn/img/donate/qqpay-qrcode.png","color":"#12B7F5","icon":"icon-qq-line"},{"name":"微信支付","path":"https://cdn.jsdelivr.net/gh/YunYouJun/cdn/img/donate/wechatpay-qrcode.jpg","color":"#2DC100","icon":"icon-wechat-pay-line"}],"creative_commons":{"license":"by-nc-sa","post":true,"language":"deed.zh"},"footer":{"since":2019,"icon":{"name":"icon-cloud-line","animated":true,"color":"#0078E7"},"powered":{"enable":true,"version":true},"beian":{"enable":false},"live_time":{"enable":true,"prefix":"本博客已运行","suffix":"(●'◡'●)","start_time":"2019-08-12T00:00:00"}},"mourn":{"enable":true,"days":["4-4"]},"google_analytics":{"enable":true,"id":"UA-163425683-1"},"busuanzi":{"enable":true,"site_uv":true,"site_uv_icon":"icon-user-line","site_pv":true,"site_pv_icon":"icon-eye-line","page_pv":true,"page_pv_icon":"icon-eye-line"},"menu":{"home":{"path":"/","icon":"icon-home-4-line"},"archives":{"path":"/archives","icon":"icon-archive-line"},"tags":{"path":"/tags","icon":"icon-price-tag-3-line"},"categories":{"path":"/categories","icon":"icon-folder-2-line"},"custom":{"title":"文档","path":"/","icon":"icon-settings-line"}},"post_meta":{"item_text":true,"created_at":true,"updated_at":true,"categories":true,"tags":true},"trianglify":{"enable":false,"cell_size":75,"width":800,"height":600,"palette":"[\"YlGnBu\", \"GnBu\", \"Purples\", \"Blues\"]","opacity":0.5},"google_adsense":{"enable":false,"client":"ca-pub-2245427233262012"}}}],"Page":[{"title":"flutter","date":"2020-04-15T06:44:28.000Z","comments":0,"type":"tags","_content":"","source":"tags/flutter.md","raw":"---\ntitle: flutter\ndate: 2020-04-15 14:44:28\ncomments: false\ntype: tags\n---\n","updated":"2020-04-22T03:09:21.860Z","path":"tags/flutter.html","layout":"page","_id":"ck9azt8mc00016sv55ki5ezqg","content":"","site":{"data":{"yun":{"avatar":{"url":"https://mirror-gold-cdn.xitu.io/168e0917d2a9255e07b?imageView2/1/w/180/h/180/q/85/format/webp/interlace/1","rounded":true,"opacity":1},"social":[{"name":"QQ","link":"https://wpa.qq.com/msgrd?v=3&uin=571590938&site=qq&menu=yes","icon":"icon-qq-line","color":"#12B7F5"},{"name":"GitHub","link":"https://github.com/unclemin","icon":"icon-github-line","color":"#181717"},{"name":"E-Mail","link":"mailto:571590938@qq.com","icon":"icon-mail-line","color":"#8E71C1"}],"banner":{"enable":true,"title":"刚刚好的小站","src":"/js/ui/banner.js"},"notice":{"enable":true,"content":"Thanks for look my blog."},"sidebar":{"bg_image":"https://cdn.jsdelivr.net/gh/YunYouJun/cdn/img/bg/stars-timing-1.jpg","bg_position":"bottom 3rem center"},"lazyload":{"enable":true},"reward_settings":{"enable":false,"icon":"icon-hand-coin-line","comment":"I'm so cute. Please give me money."},"reward":[{"name":"支付宝","path":"https://cdn.jsdelivr.net/gh/YunYouJun/cdn/img/donate/alipay-qrcode.jpg","color":"#00A3EE","icon":"icon-alipay-line"},{"name":"QQ 支付","path":"https://cdn.jsdelivr.net/gh/YunYouJun/cdn/img/donate/qqpay-qrcode.png","color":"#12B7F5","icon":"icon-qq-line"},{"name":"微信支付","path":"https://cdn.jsdelivr.net/gh/YunYouJun/cdn/img/donate/wechatpay-qrcode.jpg","color":"#2DC100","icon":"icon-wechat-pay-line"}],"creative_commons":{"license":"by-nc-sa","post":true,"language":"deed.zh"},"footer":{"since":2019,"icon":{"name":"icon-cloud-line","animated":true,"color":"#0078E7"},"powered":{"enable":true,"version":true},"beian":{"enable":false},"live_time":{"enable":true,"prefix":"本博客已运行","suffix":"(●'◡'●)","start_time":"2019-08-12T00:00:00"}},"mourn":{"enable":true,"days":["4-4"]},"google_analytics":{"enable":true,"id":"UA-163425683-1"},"busuanzi":{"enable":true,"site_uv":true,"site_uv_icon":"icon-user-line","site_pv":true,"site_pv_icon":"icon-eye-line","page_pv":true,"page_pv_icon":"icon-eye-line"},"menu":{"home":{"path":"/","icon":"icon-home-4-line"},"archives":{"path":"/archives","icon":"icon-archive-line"},"tags":{"path":"/tags","icon":"icon-price-tag-3-line"},"categories":{"path":"/categories","icon":"icon-folder-2-line"},"custom":{"title":"文档","path":"/","icon":"icon-settings-line"}},"post_meta":{"item_text":true,"created_at":true,"updated_at":true,"categories":true,"tags":true},"trianglify":{"enable":false,"cell_size":75,"width":800,"height":600,"palette":"[\"YlGnBu\", \"GnBu\", \"Purples\", \"Blues\"]","opacity":0.5},"google_adsense":{"enable":false,"client":"ca-pub-2245427233262012"}}}},"excerpt":"","more":""},{"title":"分类","date":"2017-10-12T02:47:16.000Z","comments":0,"type":"categories","_content":"","source":"categories/index.md","raw":"---\ntitle: 分类\ndate: 2017-10-12 10:47:16\ncomments: false\ntype: categories\n---\n","updated":"2020-04-17T02:31:46.374Z","path":"categories/index.html","layout":"page","_id":"ck9azt8md00036sv58045gzqg","content":"","site":{"data":{"yun":{"avatar":{"url":"https://mirror-gold-cdn.xitu.io/168e0917d2a9255e07b?imageView2/1/w/180/h/180/q/85/format/webp/interlace/1","rounded":true,"opacity":1},"social":[{"name":"QQ","link":"https://wpa.qq.com/msgrd?v=3&uin=571590938&site=qq&menu=yes","icon":"icon-qq-line","color":"#12B7F5"},{"name":"GitHub","link":"https://github.com/unclemin","icon":"icon-github-line","color":"#181717"},{"name":"E-Mail","link":"mailto:571590938@qq.com","icon":"icon-mail-line","color":"#8E71C1"}],"banner":{"enable":true,"title":"刚刚好的小站","src":"/js/ui/banner.js"},"notice":{"enable":true,"content":"Thanks for look my blog."},"sidebar":{"bg_image":"https://cdn.jsdelivr.net/gh/YunYouJun/cdn/img/bg/stars-timing-1.jpg","bg_position":"bottom 3rem center"},"lazyload":{"enable":true},"reward_settings":{"enable":false,"icon":"icon-hand-coin-line","comment":"I'm so cute. Please give me money."},"reward":[{"name":"支付宝","path":"https://cdn.jsdelivr.net/gh/YunYouJun/cdn/img/donate/alipay-qrcode.jpg","color":"#00A3EE","icon":"icon-alipay-line"},{"name":"QQ 支付","path":"https://cdn.jsdelivr.net/gh/YunYouJun/cdn/img/donate/qqpay-qrcode.png","color":"#12B7F5","icon":"icon-qq-line"},{"name":"微信支付","path":"https://cdn.jsdelivr.net/gh/YunYouJun/cdn/img/donate/wechatpay-qrcode.jpg","color":"#2DC100","icon":"icon-wechat-pay-line"}],"creative_commons":{"license":"by-nc-sa","post":true,"language":"deed.zh"},"footer":{"since":2019,"icon":{"name":"icon-cloud-line","animated":true,"color":"#0078E7"},"powered":{"enable":true,"version":true},"beian":{"enable":false},"live_time":{"enable":true,"prefix":"本博客已运行","suffix":"(●'◡'●)","start_time":"2019-08-12T00:00:00"}},"mourn":{"enable":true,"days":["4-4"]},"google_analytics":{"enable":true,"id":"UA-163425683-1"},"busuanzi":{"enable":true,"site_uv":true,"site_uv_icon":"icon-user-line","site_pv":true,"site_pv_icon":"icon-eye-line","page_pv":true,"page_pv_icon":"icon-eye-line"},"menu":{"home":{"path":"/","icon":"icon-home-4-line"},"archives":{"path":"/archives","icon":"icon-archive-line"},"tags":{"path":"/tags","icon":"icon-price-tag-3-line"},"categories":{"path":"/categories","icon":"icon-folder-2-line"},"custom":{"title":"文档","path":"/","icon":"icon-settings-line"}},"post_meta":{"item_text":true,"created_at":true,"updated_at":true,"categories":true,"tags":true},"trianglify":{"enable":false,"cell_size":75,"width":800,"height":600,"palette":"[\"YlGnBu\", \"GnBu\", \"Purples\", \"Blues\"]","opacity":0.5},"google_adsense":{"enable":false,"client":"ca-pub-2245427233262012"}}}},"excerpt":"","more":""},{"layout":"links","title":"我的小伙伴们","date":"2019-06-21T05:06:06.000Z","keywords":"链接","description":"刚刚好的小伙伴们","comments":1,"links":[{"url":"https://daixianjin.github.io","avatar":"https://daixianjin.github.io/medias/logo.png","name":"热勇","blog":"道法自然","desc":"大道自然，顺其自然，无为而治","color":"#0078e7","email":null},{"url":"https://xqpuer.github.io/","avatar":"https://xqpuer.github.io/img/avatar.png","name":"Enjoy","blog":"Enjoy","desc":"Never put off till tomorrow what you can do today","color":"#00c4b6","email":null}],"tip":"友链加载中～如失败请刷新重试～","_content":"","source":"links/index.md","raw":"---\nlayout: links\ntitle: 我的小伙伴们\ndate: 2019-06-21 13:06:06\nkeywords: 链接\ndescription: 刚刚好的小伙伴们\ncomments: true\nlinks:\n  - url: https://daixianjin.github.io\n    avatar: https://daixianjin.github.io/medias/logo.png\n    name: 热勇\n    blog: 道法自然\n    desc: 大道自然，顺其自然，无为而治\n    color: \"#0078e7\" # 代表色\n    email: # 非必须\n  - url: https://xqpuer.github.io/\n    avatar: https://xqpuer.github.io/img/avatar.png\n    name: Enjoy\n    blog: Enjoy\n    desc: Never put off till tomorrow what you can do today\n    color: \"#00c4b6\" # 代表色\n    email: # 非必须\n# placeholder: 还没想好说些什么 # 默认对友链的描述\ntip: 友链加载中～如失败请刷新重试～\n---\n","updated":"2020-04-17T02:31:46.375Z","path":"links/index.html","_id":"ck9azt8mh00076sv577l3768h","content":"","site":{"data":{"yun":{"avatar":{"url":"https://mirror-gold-cdn.xitu.io/168e0917d2a9255e07b?imageView2/1/w/180/h/180/q/85/format/webp/interlace/1","rounded":true,"opacity":1},"social":[{"name":"QQ","link":"https://wpa.qq.com/msgrd?v=3&uin=571590938&site=qq&menu=yes","icon":"icon-qq-line","color":"#12B7F5"},{"name":"GitHub","link":"https://github.com/unclemin","icon":"icon-github-line","color":"#181717"},{"name":"E-Mail","link":"mailto:571590938@qq.com","icon":"icon-mail-line","color":"#8E71C1"}],"banner":{"enable":true,"title":"刚刚好的小站","src":"/js/ui/banner.js"},"notice":{"enable":true,"content":"Thanks for look my blog."},"sidebar":{"bg_image":"https://cdn.jsdelivr.net/gh/YunYouJun/cdn/img/bg/stars-timing-1.jpg","bg_position":"bottom 3rem center"},"lazyload":{"enable":true},"reward_settings":{"enable":false,"icon":"icon-hand-coin-line","comment":"I'm so cute. Please give me money."},"reward":[{"name":"支付宝","path":"https://cdn.jsdelivr.net/gh/YunYouJun/cdn/img/donate/alipay-qrcode.jpg","color":"#00A3EE","icon":"icon-alipay-line"},{"name":"QQ 支付","path":"https://cdn.jsdelivr.net/gh/YunYouJun/cdn/img/donate/qqpay-qrcode.png","color":"#12B7F5","icon":"icon-qq-line"},{"name":"微信支付","path":"https://cdn.jsdelivr.net/gh/YunYouJun/cdn/img/donate/wechatpay-qrcode.jpg","color":"#2DC100","icon":"icon-wechat-pay-line"}],"creative_commons":{"license":"by-nc-sa","post":true,"language":"deed.zh"},"footer":{"since":2019,"icon":{"name":"icon-cloud-line","animated":true,"color":"#0078E7"},"powered":{"enable":true,"version":true},"beian":{"enable":false},"live_time":{"enable":true,"prefix":"本博客已运行","suffix":"(●'◡'●)","start_time":"2019-08-12T00:00:00"}},"mourn":{"enable":true,"days":["4-4"]},"google_analytics":{"enable":true,"id":"UA-163425683-1"},"busuanzi":{"enable":true,"site_uv":true,"site_uv_icon":"icon-user-line","site_pv":true,"site_pv_icon":"icon-eye-line","page_pv":true,"page_pv_icon":"icon-eye-line"},"menu":{"home":{"path":"/","icon":"icon-home-4-line"},"archives":{"path":"/archives","icon":"icon-archive-line"},"tags":{"path":"/tags","icon":"icon-price-tag-3-line"},"categories":{"path":"/categories","icon":"icon-folder-2-line"},"custom":{"title":"文档","path":"/","icon":"icon-settings-line"}},"post_meta":{"item_text":true,"created_at":true,"updated_at":true,"categories":true,"tags":true},"trianglify":{"enable":false,"cell_size":75,"width":800,"height":600,"palette":"[\"YlGnBu\", \"GnBu\", \"Purples\", \"Blues\"]","opacity":0.5},"google_adsense":{"enable":false,"client":"ca-pub-2245427233262012"}}}},"excerpt":"","more":""},{"title":"next.js","date":"2020-04-15T06:44:28.000Z","comments":0,"type":"tags","_content":"","source":"tags/next.md","raw":"---\ntitle: next.js\ndate: 2020-04-15 14:44:28\ncomments: false\ntype: tags\n---\n","updated":"2020-04-17T02:31:46.375Z","path":"tags/next.html","layout":"page","_id":"ck9azt8mh00086sv5ckp561uy","content":"","site":{"data":{"yun":{"avatar":{"url":"https://mirror-gold-cdn.xitu.io/168e0917d2a9255e07b?imageView2/1/w/180/h/180/q/85/format/webp/interlace/1","rounded":true,"opacity":1},"social":[{"name":"QQ","link":"https://wpa.qq.com/msgrd?v=3&uin=571590938&site=qq&menu=yes","icon":"icon-qq-line","color":"#12B7F5"},{"name":"GitHub","link":"https://github.com/unclemin","icon":"icon-github-line","color":"#181717"},{"name":"E-Mail","link":"mailto:571590938@qq.com","icon":"icon-mail-line","color":"#8E71C1"}],"banner":{"enable":true,"title":"刚刚好的小站","src":"/js/ui/banner.js"},"notice":{"enable":true,"content":"Thanks for look my blog."},"sidebar":{"bg_image":"https://cdn.jsdelivr.net/gh/YunYouJun/cdn/img/bg/stars-timing-1.jpg","bg_position":"bottom 3rem center"},"lazyload":{"enable":true},"reward_settings":{"enable":false,"icon":"icon-hand-coin-line","comment":"I'm so cute. Please give me money."},"reward":[{"name":"支付宝","path":"https://cdn.jsdelivr.net/gh/YunYouJun/cdn/img/donate/alipay-qrcode.jpg","color":"#00A3EE","icon":"icon-alipay-line"},{"name":"QQ 支付","path":"https://cdn.jsdelivr.net/gh/YunYouJun/cdn/img/donate/qqpay-qrcode.png","color":"#12B7F5","icon":"icon-qq-line"},{"name":"微信支付","path":"https://cdn.jsdelivr.net/gh/YunYouJun/cdn/img/donate/wechatpay-qrcode.jpg","color":"#2DC100","icon":"icon-wechat-pay-line"}],"creative_commons":{"license":"by-nc-sa","post":true,"language":"deed.zh"},"footer":{"since":2019,"icon":{"name":"icon-cloud-line","animated":true,"color":"#0078E7"},"powered":{"enable":true,"version":true},"beian":{"enable":false},"live_time":{"enable":true,"prefix":"本博客已运行","suffix":"(●'◡'●)","start_time":"2019-08-12T00:00:00"}},"mourn":{"enable":true,"days":["4-4"]},"google_analytics":{"enable":true,"id":"UA-163425683-1"},"busuanzi":{"enable":true,"site_uv":true,"site_uv_icon":"icon-user-line","site_pv":true,"site_pv_icon":"icon-eye-line","page_pv":true,"page_pv_icon":"icon-eye-line"},"menu":{"home":{"path":"/","icon":"icon-home-4-line"},"archives":{"path":"/archives","icon":"icon-archive-line"},"tags":{"path":"/tags","icon":"icon-price-tag-3-line"},"categories":{"path":"/categories","icon":"icon-folder-2-line"},"custom":{"title":"文档","path":"/","icon":"icon-settings-line"}},"post_meta":{"item_text":true,"created_at":true,"updated_at":true,"categories":true,"tags":true},"trianglify":{"enable":false,"cell_size":75,"width":800,"height":600,"palette":"[\"YlGnBu\", \"GnBu\", \"Purples\", \"Blues\"]","opacity":0.5},"google_adsense":{"enable":false,"client":"ca-pub-2245427233262012"}}}},"excerpt":"","more":""},{"title":"Vue","date":"2020-04-12T06:44:28.000Z","comments":0,"type":"tags","_content":"","source":"tags/index.md","raw":"---\ntitle: Vue\ndate: 2020-04-12 14:44:28\ncomments: false\ntype: tags\n---\n","updated":"2020-04-17T02:31:46.375Z","path":"tags/index.html","layout":"page","_id":"ck9azt8mi000b6sv583qrgatv","content":"","site":{"data":{"yun":{"avatar":{"url":"https://mirror-gold-cdn.xitu.io/168e0917d2a9255e07b?imageView2/1/w/180/h/180/q/85/format/webp/interlace/1","rounded":true,"opacity":1},"social":[{"name":"QQ","link":"https://wpa.qq.com/msgrd?v=3&uin=571590938&site=qq&menu=yes","icon":"icon-qq-line","color":"#12B7F5"},{"name":"GitHub","link":"https://github.com/unclemin","icon":"icon-github-line","color":"#181717"},{"name":"E-Mail","link":"mailto:571590938@qq.com","icon":"icon-mail-line","color":"#8E71C1"}],"banner":{"enable":true,"title":"刚刚好的小站","src":"/js/ui/banner.js"},"notice":{"enable":true,"content":"Thanks for look my blog."},"sidebar":{"bg_image":"https://cdn.jsdelivr.net/gh/YunYouJun/cdn/img/bg/stars-timing-1.jpg","bg_position":"bottom 3rem center"},"lazyload":{"enable":true},"reward_settings":{"enable":false,"icon":"icon-hand-coin-line","comment":"I'm so cute. Please give me money."},"reward":[{"name":"支付宝","path":"https://cdn.jsdelivr.net/gh/YunYouJun/cdn/img/donate/alipay-qrcode.jpg","color":"#00A3EE","icon":"icon-alipay-line"},{"name":"QQ 支付","path":"https://cdn.jsdelivr.net/gh/YunYouJun/cdn/img/donate/qqpay-qrcode.png","color":"#12B7F5","icon":"icon-qq-line"},{"name":"微信支付","path":"https://cdn.jsdelivr.net/gh/YunYouJun/cdn/img/donate/wechatpay-qrcode.jpg","color":"#2DC100","icon":"icon-wechat-pay-line"}],"creative_commons":{"license":"by-nc-sa","post":true,"language":"deed.zh"},"footer":{"since":2019,"icon":{"name":"icon-cloud-line","animated":true,"color":"#0078E7"},"powered":{"enable":true,"version":true},"beian":{"enable":false},"live_time":{"enable":true,"prefix":"本博客已运行","suffix":"(●'◡'●)","start_time":"2019-08-12T00:00:00"}},"mourn":{"enable":true,"days":["4-4"]},"google_analytics":{"enable":true,"id":"UA-163425683-1"},"busuanzi":{"enable":true,"site_uv":true,"site_uv_icon":"icon-user-line","site_pv":true,"site_pv_icon":"icon-eye-line","page_pv":true,"page_pv_icon":"icon-eye-line"},"menu":{"home":{"path":"/","icon":"icon-home-4-line"},"archives":{"path":"/archives","icon":"icon-archive-line"},"tags":{"path":"/tags","icon":"icon-price-tag-3-line"},"categories":{"path":"/categories","icon":"icon-folder-2-line"},"custom":{"title":"文档","path":"/","icon":"icon-settings-line"}},"post_meta":{"item_text":true,"created_at":true,"updated_at":true,"categories":true,"tags":true},"trianglify":{"enable":false,"cell_size":75,"width":800,"height":600,"palette":"[\"YlGnBu\", \"GnBu\", \"Purples\", \"Blues\"]","opacity":0.5},"google_adsense":{"enable":false,"client":"ca-pub-2245427233262012"}}}},"excerpt":"","more":""},{"title":"react.js","date":"2020-04-15T06:44:28.000Z","comments":0,"type":"tags","_content":"","source":"tags/react.md","raw":"---\ntitle: react.js\ndate: 2020-04-15 14:44:28\ncomments: false\ntype: tags\n---\n","updated":"2020-04-17T02:31:46.376Z","path":"tags/react.html","layout":"page","_id":"ck9azt8mk000d6sv55sd20hvh","content":"","site":{"data":{"yun":{"avatar":{"url":"https://mirror-gold-cdn.xitu.io/168e0917d2a9255e07b?imageView2/1/w/180/h/180/q/85/format/webp/interlace/1","rounded":true,"opacity":1},"social":[{"name":"QQ","link":"https://wpa.qq.com/msgrd?v=3&uin=571590938&site=qq&menu=yes","icon":"icon-qq-line","color":"#12B7F5"},{"name":"GitHub","link":"https://github.com/unclemin","icon":"icon-github-line","color":"#181717"},{"name":"E-Mail","link":"mailto:571590938@qq.com","icon":"icon-mail-line","color":"#8E71C1"}],"banner":{"enable":true,"title":"刚刚好的小站","src":"/js/ui/banner.js"},"notice":{"enable":true,"content":"Thanks for look my blog."},"sidebar":{"bg_image":"https://cdn.jsdelivr.net/gh/YunYouJun/cdn/img/bg/stars-timing-1.jpg","bg_position":"bottom 3rem center"},"lazyload":{"enable":true},"reward_settings":{"enable":false,"icon":"icon-hand-coin-line","comment":"I'm so cute. Please give me money."},"reward":[{"name":"支付宝","path":"https://cdn.jsdelivr.net/gh/YunYouJun/cdn/img/donate/alipay-qrcode.jpg","color":"#00A3EE","icon":"icon-alipay-line"},{"name":"QQ 支付","path":"https://cdn.jsdelivr.net/gh/YunYouJun/cdn/img/donate/qqpay-qrcode.png","color":"#12B7F5","icon":"icon-qq-line"},{"name":"微信支付","path":"https://cdn.jsdelivr.net/gh/YunYouJun/cdn/img/donate/wechatpay-qrcode.jpg","color":"#2DC100","icon":"icon-wechat-pay-line"}],"creative_commons":{"license":"by-nc-sa","post":true,"language":"deed.zh"},"footer":{"since":2019,"icon":{"name":"icon-cloud-line","animated":true,"color":"#0078E7"},"powered":{"enable":true,"version":true},"beian":{"enable":false},"live_time":{"enable":true,"prefix":"本博客已运行","suffix":"(●'◡'●)","start_time":"2019-08-12T00:00:00"}},"mourn":{"enable":true,"days":["4-4"]},"google_analytics":{"enable":true,"id":"UA-163425683-1"},"busuanzi":{"enable":true,"site_uv":true,"site_uv_icon":"icon-user-line","site_pv":true,"site_pv_icon":"icon-eye-line","page_pv":true,"page_pv_icon":"icon-eye-line"},"menu":{"home":{"path":"/","icon":"icon-home-4-line"},"archives":{"path":"/archives","icon":"icon-archive-line"},"tags":{"path":"/tags","icon":"icon-price-tag-3-line"},"categories":{"path":"/categories","icon":"icon-folder-2-line"},"custom":{"title":"文档","path":"/","icon":"icon-settings-line"}},"post_meta":{"item_text":true,"created_at":true,"updated_at":true,"categories":true,"tags":true},"trianglify":{"enable":false,"cell_size":75,"width":800,"height":600,"palette":"[\"YlGnBu\", \"GnBu\", \"Purples\", \"Blues\"]","opacity":0.5},"google_adsense":{"enable":false,"client":"ca-pub-2245427233262012"}}}},"excerpt":"","more":""}],"Post":[{"title":"next.js  +  ts+ ant使用","date":"2020-04-12T06:53:27.000Z","_content":"\n\n`Next.js`来实现`React`的服务端渲染主要是便捷、高效，因为`Next.Js`能够简单的实现服务端的渲染\n\n#### 基础环境搭建\n\n- 新建文件夹 `mkdir demo`\n- 进入新建的文件目录，为你的项目安装 `next`、`react` 和 `react-dom` \n\n```js\nnpm install next react react-dom\n```\n\n安装完后的项目文件，pages是自己新建的，next默认的名称必须是pages\n\n\n![微信截图_20200416170503.png](https://i.loli.net/2020/04/16/wtMf56UbelGOBqm.png)\n\n\n-  在 `package.json` 文件并添加 `scripts` 配置运行脚本：\n\n```js\n\"scripts\": {\n  \"dev\": \"next\",\n  \"build\": \"next build\",\n  \"start\": \"next start\"\n}\n```\n\n-  运行 `npm run dev` 在浏览器中查看\n\n#### 支持css文件\n\n```ssh\nyarn add @zeit/next-css\n#or\nnpm install @zeit/next-css\n```\n\n下载完后在根目录新建一个`next.config.js` 文件，这个是`next`的总配置文件，添加如下代码就可以了\n\n```js\nconst withCss = require('@zeit/next-css')\n\nif(typeof require !== 'undefined'){\n    require.extensions['.css']=file=>{}\n}\n\nmodule.exports = withCss({})\n```\n\n#### 引入 `ant design`UI组件\n\n- 安装`antd`，实现按需加载\n\n  ```js\n  npm install antd\n  ```\n\n- 再安装`babel-plugin-import`\n\n  ```js\n  npm install babel-plugin-import\n  ```\n\n- 在根目录下新建`.babelrc`文件，并加入如下配置\n\n  ```js\n  {\n    \"presets\": [\"next/babel\"],\n    \"plugins\": [\n      [\n        \"import\",\n        {\n          \"libraryName\": \"antd\",\n          \"style\": \"css\" // `style: true` 会加载 less 文件\n        }\n      ]\n    ]\n  }\n  ```\n\n- 页面中可以直接引入组件，不需要多引入`ant`的`css`文件，按需加载\n\n  ```js\n  import { Button } from 'antd';\n  import About from \"./about\";\n  \n  const Index = () => (\n    <div>\n        <About/>\n        <Button type=\"primary\">Primary</Button>\n    </div>\n  )\n  export default Index\n  ```\n\n  #### 引入`TypeScript`到`next`中\n\n  - 根目录新建`tsconfig.json`文件并执行`npm run dev`,出现以下提示\n\n  ```ssh\n  npm run dev\n  # You'll see instructions like these:\n  #\n  # Please install typescript, @types/react, and @types/node by running:\n  #\n  #         yarn add --dev typescript @types/react @types/node\n  #\n  # ...\n  ```\n\n  - 根据提示执行`yarn add --dev typescript @types/react @types/node` or  `npm install --dev typescript @types/react @types/node`\n\n  - `tsconfig.json`会生成如下配置，就可以使用`tsx`愉快的编写啦\n\n  ```js\n  {\n    \"compilerOptions\": {\n      \"target\": \"es5\",\n      \"lib\": [\n        \"dom\",\n        \"dom.iterable\",\n        \"esnext\"\n      ],\n      \"allowJs\": true,\n      \"skipLibCheck\": true,\n      \"strict\": true,\n      \"forceConsistentCasingInFileNames\": true,\n      \"noEmit\": true,\n      \"esModuleInterop\": true,\n      \"module\": \"esnext\",\n      \"moduleResolution\": \"node\",\n      \"resolveJsonModule\": true,\n      \"isolatedModules\": true,\n      \"jsx\": \"preserve\"\n    },\n    \"exclude\": [\n      \"node_modules\"\n    ],\n    \"include\": [\n      \"next-env.d.ts\",\n      \"**/*.ts\",\n      \"**/*.tsx\", \"pages/index.js\"\n    ]\n  }\n  ```\n\n    ","source":"_posts/NextJs.md","raw":"---\ntitle: next.js  +  ts+ ant使用\ndate: 2020-04-12 14:53:27\ntags: \n  - next.js\ncategories: web前端\n---\n\n\n`Next.js`来实现`React`的服务端渲染主要是便捷、高效，因为`Next.Js`能够简单的实现服务端的渲染\n\n#### 基础环境搭建\n\n- 新建文件夹 `mkdir demo`\n- 进入新建的文件目录，为你的项目安装 `next`、`react` 和 `react-dom` \n\n```js\nnpm install next react react-dom\n```\n\n安装完后的项目文件，pages是自己新建的，next默认的名称必须是pages\n\n\n![微信截图_20200416170503.png](https://i.loli.net/2020/04/16/wtMf56UbelGOBqm.png)\n\n\n-  在 `package.json` 文件并添加 `scripts` 配置运行脚本：\n\n```js\n\"scripts\": {\n  \"dev\": \"next\",\n  \"build\": \"next build\",\n  \"start\": \"next start\"\n}\n```\n\n-  运行 `npm run dev` 在浏览器中查看\n\n#### 支持css文件\n\n```ssh\nyarn add @zeit/next-css\n#or\nnpm install @zeit/next-css\n```\n\n下载完后在根目录新建一个`next.config.js` 文件，这个是`next`的总配置文件，添加如下代码就可以了\n\n```js\nconst withCss = require('@zeit/next-css')\n\nif(typeof require !== 'undefined'){\n    require.extensions['.css']=file=>{}\n}\n\nmodule.exports = withCss({})\n```\n\n#### 引入 `ant design`UI组件\n\n- 安装`antd`，实现按需加载\n\n  ```js\n  npm install antd\n  ```\n\n- 再安装`babel-plugin-import`\n\n  ```js\n  npm install babel-plugin-import\n  ```\n\n- 在根目录下新建`.babelrc`文件，并加入如下配置\n\n  ```js\n  {\n    \"presets\": [\"next/babel\"],\n    \"plugins\": [\n      [\n        \"import\",\n        {\n          \"libraryName\": \"antd\",\n          \"style\": \"css\" // `style: true` 会加载 less 文件\n        }\n      ]\n    ]\n  }\n  ```\n\n- 页面中可以直接引入组件，不需要多引入`ant`的`css`文件，按需加载\n\n  ```js\n  import { Button } from 'antd';\n  import About from \"./about\";\n  \n  const Index = () => (\n    <div>\n        <About/>\n        <Button type=\"primary\">Primary</Button>\n    </div>\n  )\n  export default Index\n  ```\n\n  #### 引入`TypeScript`到`next`中\n\n  - 根目录新建`tsconfig.json`文件并执行`npm run dev`,出现以下提示\n\n  ```ssh\n  npm run dev\n  # You'll see instructions like these:\n  #\n  # Please install typescript, @types/react, and @types/node by running:\n  #\n  #         yarn add --dev typescript @types/react @types/node\n  #\n  # ...\n  ```\n\n  - 根据提示执行`yarn add --dev typescript @types/react @types/node` or  `npm install --dev typescript @types/react @types/node`\n\n  - `tsconfig.json`会生成如下配置，就可以使用`tsx`愉快的编写啦\n\n  ```js\n  {\n    \"compilerOptions\": {\n      \"target\": \"es5\",\n      \"lib\": [\n        \"dom\",\n        \"dom.iterable\",\n        \"esnext\"\n      ],\n      \"allowJs\": true,\n      \"skipLibCheck\": true,\n      \"strict\": true,\n      \"forceConsistentCasingInFileNames\": true,\n      \"noEmit\": true,\n      \"esModuleInterop\": true,\n      \"module\": \"esnext\",\n      \"moduleResolution\": \"node\",\n      \"resolveJsonModule\": true,\n      \"isolatedModules\": true,\n      \"jsx\": \"preserve\"\n    },\n    \"exclude\": [\n      \"node_modules\"\n    ],\n    \"include\": [\n      \"next-env.d.ts\",\n      \"**/*.ts\",\n      \"**/*.tsx\", \"pages/index.js\"\n    ]\n  }\n  ```\n\n    ","slug":"NextJs","published":1,"updated":"2020-04-22T06:15:08.168Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck9azt8m600006sv5afua47ni","content":"<p><code>Next.js</code>来实现<code>React</code>的服务端渲染主要是便捷、高效，因为<code>Next.Js</code>能够简单的实现服务端的渲染</p>\n<h4 id=\"基础环境搭建\"><a href=\"#基础环境搭建\" class=\"headerlink\" title=\"基础环境搭建\"></a>基础环境搭建</h4><ul>\n<li>新建文件夹 <code>mkdir demo</code></li>\n<li>进入新建的文件目录，为你的项目安装 <code>next</code>、<code>react</code> 和 <code>react-dom</code> </li>\n</ul>\n<pre class=\"line-numbers language-js\"><code class=\"language-js\">npm install next react react<span class=\"token operator\">-</span>dom<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>安装完后的项目文件，pages是自己新建的，next默认的名称必须是pages</p>\n<p><img src=\"https://i.loli.net/2020/04/16/wtMf56UbelGOBqm.png\" alt=\"微信截图_20200416170503.png\" loading=\"lazy\"></p>\n<ul>\n<li>在 <code>package.json</code> 文件并添加 <code>scripts</code> 配置运行脚本：</li>\n</ul>\n<pre class=\"line-numbers language-js\"><code class=\"language-js\"><span class=\"token string\">\"scripts\"</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token string\">\"dev\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"next\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">\"build\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"next build\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">\"start\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"next start\"</span>\n<span class=\"token punctuation\">}</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<ul>\n<li>运行 <code>npm run dev</code> 在浏览器中查看</li>\n</ul>\n<h4 id=\"支持css文件\"><a href=\"#支持css文件\" class=\"headerlink\" title=\"支持css文件\"></a>支持css文件</h4><pre class=\"line-numbers language-ssh\"><code class=\"language-ssh\">yarn add @zeit/next-css\n#or\nnpm install @zeit/next-css<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n<p>下载完后在根目录新建一个<code>next.config.js</code> 文件，这个是<code>next</code>的总配置文件，添加如下代码就可以了</p>\n<pre class=\"line-numbers language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> withCss <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'@zeit/next-css'</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">typeof</span> require <span class=\"token operator\">!==</span> <span class=\"token string\">'undefined'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    require<span class=\"token punctuation\">.</span>extensions<span class=\"token punctuation\">[</span><span class=\"token string\">'.css'</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span>file<span class=\"token operator\">=</span><span class=\"token operator\">></span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\nmodule<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> <span class=\"token function\">withCss</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h4 id=\"引入-ant-designUI组件\"><a href=\"#引入-ant-designUI组件\" class=\"headerlink\" title=\"引入 ant designUI组件\"></a>引入 <code>ant design</code>UI组件</h4><ul>\n<li><p>安装<code>antd</code>，实现按需加载</p>\n<pre class=\"line-numbers language-js\"><code class=\"language-js\">npm install antd<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n</li>\n<li><p>再安装<code>babel-plugin-import</code></p>\n<pre class=\"line-numbers language-js\"><code class=\"language-js\">npm install babel<span class=\"token operator\">-</span>plugin<span class=\"token operator\">-</span><span class=\"token keyword\">import</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n</li>\n<li><p>在根目录下新建<code>.babelrc</code>文件，并加入如下配置</p>\n<pre class=\"line-numbers language-js\"><code class=\"language-js\"><span class=\"token punctuation\">{</span>\n  <span class=\"token string\">\"presets\"</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"next/babel\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">\"plugins\"</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token punctuation\">[</span>\n      <span class=\"token string\">\"import\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">{</span>\n        <span class=\"token string\">\"libraryName\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"antd\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"style\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"css\"</span> <span class=\"token comment\" spellcheck=\"true\">// `style: true` 会加载 less 文件</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">]</span>\n  <span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n</li>\n<li><p>页面中可以直接引入组件，不需要多引入<code>ant</code>的<code>css</code>文件，按需加载</p>\n<pre class=\"line-numbers language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Button <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'antd'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> About <span class=\"token keyword\">from</span> <span class=\"token string\">\"./about\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> Index <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token punctuation\">(</span>\n  <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>About<span class=\"token operator\">/</span><span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>Button type<span class=\"token operator\">=</span><span class=\"token string\">\"primary\"</span><span class=\"token operator\">></span>Primary<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Button<span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> Index<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h4 id=\"引入TypeScript到next中\"><a href=\"#引入TypeScript到next中\" class=\"headerlink\" title=\"引入TypeScript到next中\"></a>引入<code>TypeScript</code>到<code>next</code>中</h4><ul>\n<li>根目录新建<code>tsconfig.json</code>文件并执行<code>npm run dev</code>,出现以下提示</li>\n</ul>\n<pre class=\"line-numbers language-ssh\"><code class=\"language-ssh\">npm run dev\n# You'll see instructions like these:\n#\n# Please install typescript, @types/react, and @types/node by running:\n#\n#         yarn add --dev typescript @types/react @types/node\n#\n# ...<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<ul>\n<li><p>根据提示执行<code>yarn add --dev typescript @types/react @types/node</code> or  <code>npm install --dev typescript @types/react @types/node</code></p>\n</li>\n<li><p><code>tsconfig.json</code>会生成如下配置，就可以使用<code>tsx</code>愉快的编写啦</p>\n</li>\n</ul>\n<pre class=\"line-numbers language-js\"><code class=\"language-js\"><span class=\"token punctuation\">{</span>\n  <span class=\"token string\">\"compilerOptions\"</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token string\">\"target\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"es5\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"lib\"</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>\n      <span class=\"token string\">\"dom\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token string\">\"dom.iterable\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token string\">\"esnext\"</span>\n    <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"allowJs\"</span><span class=\"token punctuation\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"skipLibCheck\"</span><span class=\"token punctuation\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"strict\"</span><span class=\"token punctuation\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"forceConsistentCasingInFileNames\"</span><span class=\"token punctuation\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"noEmit\"</span><span class=\"token punctuation\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"esModuleInterop\"</span><span class=\"token punctuation\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"module\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"esnext\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"moduleResolution\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"node\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"resolveJsonModule\"</span><span class=\"token punctuation\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"isolatedModules\"</span><span class=\"token punctuation\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"jsx\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"preserve\"</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">\"exclude\"</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token string\">\"node_modules\"</span>\n  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">\"include\"</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token string\">\"next-env.d.ts\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"**/*.ts\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"**/*.tsx\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"pages/index.js\"</span>\n  <span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n</li>\n</ul>\n","site":{"data":{"yun":{"avatar":{"url":"https://mirror-gold-cdn.xitu.io/168e0917d2a9255e07b?imageView2/1/w/180/h/180/q/85/format/webp/interlace/1","rounded":true,"opacity":1},"social":[{"name":"QQ","link":"https://wpa.qq.com/msgrd?v=3&uin=571590938&site=qq&menu=yes","icon":"icon-qq-line","color":"#12B7F5"},{"name":"GitHub","link":"https://github.com/unclemin","icon":"icon-github-line","color":"#181717"},{"name":"E-Mail","link":"mailto:571590938@qq.com","icon":"icon-mail-line","color":"#8E71C1"}],"banner":{"enable":true,"title":"刚刚好的小站","src":"/js/ui/banner.js"},"notice":{"enable":true,"content":"Thanks for look my blog."},"sidebar":{"bg_image":"https://cdn.jsdelivr.net/gh/YunYouJun/cdn/img/bg/stars-timing-1.jpg","bg_position":"bottom 3rem center"},"lazyload":{"enable":true},"reward_settings":{"enable":false,"icon":"icon-hand-coin-line","comment":"I'm so cute. Please give me money."},"reward":[{"name":"支付宝","path":"https://cdn.jsdelivr.net/gh/YunYouJun/cdn/img/donate/alipay-qrcode.jpg","color":"#00A3EE","icon":"icon-alipay-line"},{"name":"QQ 支付","path":"https://cdn.jsdelivr.net/gh/YunYouJun/cdn/img/donate/qqpay-qrcode.png","color":"#12B7F5","icon":"icon-qq-line"},{"name":"微信支付","path":"https://cdn.jsdelivr.net/gh/YunYouJun/cdn/img/donate/wechatpay-qrcode.jpg","color":"#2DC100","icon":"icon-wechat-pay-line"}],"creative_commons":{"license":"by-nc-sa","post":true,"language":"deed.zh"},"footer":{"since":2019,"icon":{"name":"icon-cloud-line","animated":true,"color":"#0078E7"},"powered":{"enable":true,"version":true},"beian":{"enable":false},"live_time":{"enable":true,"prefix":"本博客已运行","suffix":"(●'◡'●)","start_time":"2019-08-12T00:00:00"}},"mourn":{"enable":true,"days":["4-4"]},"google_analytics":{"enable":true,"id":"UA-163425683-1"},"busuanzi":{"enable":true,"site_uv":true,"site_uv_icon":"icon-user-line","site_pv":true,"site_pv_icon":"icon-eye-line","page_pv":true,"page_pv_icon":"icon-eye-line"},"menu":{"home":{"path":"/","icon":"icon-home-4-line"},"archives":{"path":"/archives","icon":"icon-archive-line"},"tags":{"path":"/tags","icon":"icon-price-tag-3-line"},"categories":{"path":"/categories","icon":"icon-folder-2-line"},"custom":{"title":"文档","path":"/","icon":"icon-settings-line"}},"post_meta":{"item_text":true,"created_at":true,"updated_at":true,"categories":true,"tags":true},"trianglify":{"enable":false,"cell_size":75,"width":800,"height":600,"palette":"[\"YlGnBu\", \"GnBu\", \"Purples\", \"Blues\"]","opacity":0.5},"google_adsense":{"enable":false,"client":"ca-pub-2245427233262012"}}}},"excerpt":"","more":"<p><code>Next.js</code>来实现<code>React</code>的服务端渲染主要是便捷、高效，因为<code>Next.Js</code>能够简单的实现服务端的渲染</p>\n<h4 id=\"基础环境搭建\"><a href=\"#基础环境搭建\" class=\"headerlink\" title=\"基础环境搭建\"></a>基础环境搭建</h4><ul>\n<li>新建文件夹 <code>mkdir demo</code></li>\n<li>进入新建的文件目录，为你的项目安装 <code>next</code>、<code>react</code> 和 <code>react-dom</code> </li>\n</ul>\n<pre><code class=\"js\">npm install next react react-dom</code></pre>\n<p>安装完后的项目文件，pages是自己新建的，next默认的名称必须是pages</p>\n<p><img src=\"https://i.loli.net/2020/04/16/wtMf56UbelGOBqm.png\" alt=\"微信截图_20200416170503.png\"></p>\n<ul>\n<li>在 <code>package.json</code> 文件并添加 <code>scripts</code> 配置运行脚本：</li>\n</ul>\n<pre><code class=\"js\">&quot;scripts&quot;: {\n  &quot;dev&quot;: &quot;next&quot;,\n  &quot;build&quot;: &quot;next build&quot;,\n  &quot;start&quot;: &quot;next start&quot;\n}</code></pre>\n<ul>\n<li>运行 <code>npm run dev</code> 在浏览器中查看</li>\n</ul>\n<h4 id=\"支持css文件\"><a href=\"#支持css文件\" class=\"headerlink\" title=\"支持css文件\"></a>支持css文件</h4><pre><code class=\"ssh\">yarn add @zeit/next-css\n#or\nnpm install @zeit/next-css</code></pre>\n<p>下载完后在根目录新建一个<code>next.config.js</code> 文件，这个是<code>next</code>的总配置文件，添加如下代码就可以了</p>\n<pre><code class=\"js\">const withCss = require(&#39;@zeit/next-css&#39;)\n\nif(typeof require !== &#39;undefined&#39;){\n    require.extensions[&#39;.css&#39;]=file=&gt;{}\n}\n\nmodule.exports = withCss({})</code></pre>\n<h4 id=\"引入-ant-designUI组件\"><a href=\"#引入-ant-designUI组件\" class=\"headerlink\" title=\"引入 ant designUI组件\"></a>引入 <code>ant design</code>UI组件</h4><ul>\n<li><p>安装<code>antd</code>，实现按需加载</p>\n<pre><code class=\"js\">npm install antd</code></pre>\n</li>\n<li><p>再安装<code>babel-plugin-import</code></p>\n<pre><code class=\"js\">npm install babel-plugin-import</code></pre>\n</li>\n<li><p>在根目录下新建<code>.babelrc</code>文件，并加入如下配置</p>\n<pre><code class=\"js\">{\n  &quot;presets&quot;: [&quot;next/babel&quot;],\n  &quot;plugins&quot;: [\n    [\n      &quot;import&quot;,\n      {\n        &quot;libraryName&quot;: &quot;antd&quot;,\n        &quot;style&quot;: &quot;css&quot; // `style: true` 会加载 less 文件\n      }\n    ]\n  ]\n}</code></pre>\n</li>\n<li><p>页面中可以直接引入组件，不需要多引入<code>ant</code>的<code>css</code>文件，按需加载</p>\n<pre><code class=\"js\">import { Button } from &#39;antd&#39;;\nimport About from &quot;./about&quot;;\n\nconst Index = () =&gt; (\n  &lt;div&gt;\n      &lt;About/&gt;\n      &lt;Button type=&quot;primary&quot;&gt;Primary&lt;/Button&gt;\n  &lt;/div&gt;\n)\nexport default Index</code></pre>\n<h4 id=\"引入TypeScript到next中\"><a href=\"#引入TypeScript到next中\" class=\"headerlink\" title=\"引入TypeScript到next中\"></a>引入<code>TypeScript</code>到<code>next</code>中</h4><ul>\n<li>根目录新建<code>tsconfig.json</code>文件并执行<code>npm run dev</code>,出现以下提示</li>\n</ul>\n<pre><code class=\"ssh\">npm run dev\n# You&#39;ll see instructions like these:\n#\n# Please install typescript, @types/react, and @types/node by running:\n#\n#         yarn add --dev typescript @types/react @types/node\n#\n# ...</code></pre>\n<ul>\n<li><p>根据提示执行<code>yarn add --dev typescript @types/react @types/node</code> or  <code>npm install --dev typescript @types/react @types/node</code></p>\n</li>\n<li><p><code>tsconfig.json</code>会生成如下配置，就可以使用<code>tsx</code>愉快的编写啦</p>\n</li>\n</ul>\n<pre><code class=\"js\">{\n  &quot;compilerOptions&quot;: {\n    &quot;target&quot;: &quot;es5&quot;,\n    &quot;lib&quot;: [\n      &quot;dom&quot;,\n      &quot;dom.iterable&quot;,\n      &quot;esnext&quot;\n    ],\n    &quot;allowJs&quot;: true,\n    &quot;skipLibCheck&quot;: true,\n    &quot;strict&quot;: true,\n    &quot;forceConsistentCasingInFileNames&quot;: true,\n    &quot;noEmit&quot;: true,\n    &quot;esModuleInterop&quot;: true,\n    &quot;module&quot;: &quot;esnext&quot;,\n    &quot;moduleResolution&quot;: &quot;node&quot;,\n    &quot;resolveJsonModule&quot;: true,\n    &quot;isolatedModules&quot;: true,\n    &quot;jsx&quot;: &quot;preserve&quot;\n  },\n  &quot;exclude&quot;: [\n    &quot;node_modules&quot;\n  ],\n  &quot;include&quot;: [\n    &quot;next-env.d.ts&quot;,\n    &quot;**/*.ts&quot;,\n    &quot;**/*.tsx&quot;, &quot;pages/index.js&quot;\n  ]\n}</code></pre>\n</li>\n</ul>\n"},{"title":"Vue深入浅出","date":"2020-04-12T06:53:27.000Z","_content":"\n\n### 1.浏览器的渲染流程\n\n浏览器加载html的文件时，会先将html文件解析成一个`dom`数，并识别加载`dom`样式，和dom树一起合并渲染。有了渲染树之后，渲染引擎将计算所有元素的位置信息，最后绘制在屏幕上。js引擎和渲染引擎是两个独立的线程，但是js引擎可以触发渲染引擎工作，当我们用js来改变`dom`中元素的外观时，会调用相关的`api`方法操作`dom`对象，会触发渲染引擎回流或者重绘。\n\n- 回流： 当我们对`dom`的修改引发了元素尺寸的变化时，浏览器需要重新计算元素的大小和位置，最后将重新计算的结果绘制出来，这个过程称为回流。\n\n- 重绘： 当我们对`dom`的修改只单纯改变元素的颜色时，浏览器此时并不需要重新计算元素的大小和位置，而只要重新绘制新样式。这个过程称为重绘\n- 很显然回流比重绘更加耗费性能，当童通过js修改dom时，会触发渲染引擎的回流或者重绘，对性能的开销是非常大的，所以要尽可能的减少`dom`操作\n\n\n\n### 2.Vnode\n\nVue渲染机制的优化上，引进了`virtual dom`的概念，它是用`Vnode`这个构造函数去描述一个`dom`节点,也就是操作`dom`时会优先操作`virtual dom`这个js对象，最后通过对比，将要改动的部分通知并更新到真实的`dom`中，进而减少渲染引擎绘制的次数，`virtual dom`就是一个中间桥梁\n\n\n### keep- alive\n\n#### 基本用法和参数\n- 保持组件的状态，避免重复渲染造成的性能损失\n- 只需要在动态组件的外面包裹就好\n\n- 可接受三个参数进行匹配，对应的组件即可进行缓存\n  - `include` 包含的组件(可以为字符串，数组，以及正则表达式,只有匹配的组件会被缓存)\n  - `exclude` 排除的组件(以为字符串，数组，以及正则表达式,任何匹配的组件都`不`会被缓存)\n  - `max` 缓存组件的最大值(类型为字符或者数字,可以控制缓存组件的个数，超出会移出第一个缓存)\n\n\n  ```js\n  <!-- 只缓存组件 name 为 c 或者 j 的组件-->\n  <keep-alive include=\"c,j\">\n    <component></component>\n  </keep-alive>\n  \n  <!-- 组件 name为 m 的组件不缓存 -->\n  <keep-alive exclude=\"m\"> \n    <component></component>\n  </keep-alive>\n  ```\n\n  - 如果参数里面是正则表达式或者方法的话，就需要动态绑定\n  - 同时使用了`include`和`exclude`，`exclude`的优先级会更高，以`exclude`的条件为主\n\n\n  ```js\n  <!-- 使用正则表达式，需使用 v-bind -->\n  <keep-alive :include=\"/c|j/\">\n    <component></component>\n  </keep-alive>\n  <!-- 动态判断 -->\n  <keep-alive :include=\"includedComponents\">\n    <router-view></router-view>\n  </keep-alive>\n  ```\n\n\n  ```js\n  <!-- 动态判断，exclude 的优先级会更高,只缓存 c 组件-->\n  <keep-alive :include=\"c,m\" exclude=\"m\" max=\"5\">\n    <component></component>\n  </keep-alive>\n  ```\n\n  \n\n  ### `keep-alive`的生命周期钩子函数\n\n  ##### 页面第一次进入时的执行顺序\n\n    - created > mounted > activated(进入时触发的钩子函数)\n\n    - 退出时触发deactivated\n\n    - 当再次进入（前进或者后退）时，只触发activated，并且：activated,deactivated这两个生命周期函数一定是要在使用了keep-alive组件后才会有的，否则则不存在\n\n  ##### 缓存路由里面的页面\n\n\n  ```js\n  <!-- 所有路径匹配到的视图组件都会被缓存,像 elemnt-admin 这些框架，多级路由就不会全部缓存，需要参考官方文档 -->\n  <keep-alive>\n      <router-view>\n      </router-view>\n  </keep-alive>\n  ```\n\n\n- 只缓存router-view里面的某个组件\n\n  - 可以用`include`和`exclude`，但是如果组件太多的话会很麻烦，不是很好的选择\n\n\n  ```js\n  <!-- 只有路径匹配到的 include 为 c 的组件会被缓存 -->\n  <keep-alive include=\"c\">\n      <router-view>\n      </router-view>\n  </keep-alive>\n  ```\n\n  \n\n  - 使用路由里面的 meta  属性，更方便扩展和管理\n\n  - app.vue,通过路由的属性来判断\n\n    \n\n  ```js\n  <keep-alive>\n      <router-view v-if=\"$route.meta.keepAlive\"></router-view>\n  </keep-alive>\n  <router-view v-if=\"!$route.meta.keepAlive\"></router-view>\n  ```\n\n  \n\n  ```js\n  {\n    path: '/',\n    name: 'C',\n    component: C,\n    meta: {\n        keepAlive: true // 需要被缓存\n    }\n  }\n  {\n    path: '/',\n    name: 'J',\n    component: J,\n    meta: {\n        keepAlive: fslse // 不需要被缓存\n    }\n  }\n  ```\n\n    \n\n","source":"_posts/vue_deep.md","raw":"---\ntitle: Vue深入浅出\ndate: 2020-04-12 14:53:27\ntags: \n  - vue\ncategories: web前端\n---\n\n\n### 1.浏览器的渲染流程\n\n浏览器加载html的文件时，会先将html文件解析成一个`dom`数，并识别加载`dom`样式，和dom树一起合并渲染。有了渲染树之后，渲染引擎将计算所有元素的位置信息，最后绘制在屏幕上。js引擎和渲染引擎是两个独立的线程，但是js引擎可以触发渲染引擎工作，当我们用js来改变`dom`中元素的外观时，会调用相关的`api`方法操作`dom`对象，会触发渲染引擎回流或者重绘。\n\n- 回流： 当我们对`dom`的修改引发了元素尺寸的变化时，浏览器需要重新计算元素的大小和位置，最后将重新计算的结果绘制出来，这个过程称为回流。\n\n- 重绘： 当我们对`dom`的修改只单纯改变元素的颜色时，浏览器此时并不需要重新计算元素的大小和位置，而只要重新绘制新样式。这个过程称为重绘\n- 很显然回流比重绘更加耗费性能，当童通过js修改dom时，会触发渲染引擎的回流或者重绘，对性能的开销是非常大的，所以要尽可能的减少`dom`操作\n\n\n\n### 2.Vnode\n\nVue渲染机制的优化上，引进了`virtual dom`的概念，它是用`Vnode`这个构造函数去描述一个`dom`节点,也就是操作`dom`时会优先操作`virtual dom`这个js对象，最后通过对比，将要改动的部分通知并更新到真实的`dom`中，进而减少渲染引擎绘制的次数，`virtual dom`就是一个中间桥梁\n\n\n### keep- alive\n\n#### 基本用法和参数\n- 保持组件的状态，避免重复渲染造成的性能损失\n- 只需要在动态组件的外面包裹就好\n\n- 可接受三个参数进行匹配，对应的组件即可进行缓存\n  - `include` 包含的组件(可以为字符串，数组，以及正则表达式,只有匹配的组件会被缓存)\n  - `exclude` 排除的组件(以为字符串，数组，以及正则表达式,任何匹配的组件都`不`会被缓存)\n  - `max` 缓存组件的最大值(类型为字符或者数字,可以控制缓存组件的个数，超出会移出第一个缓存)\n\n\n  ```js\n  <!-- 只缓存组件 name 为 c 或者 j 的组件-->\n  <keep-alive include=\"c,j\">\n    <component></component>\n  </keep-alive>\n  \n  <!-- 组件 name为 m 的组件不缓存 -->\n  <keep-alive exclude=\"m\"> \n    <component></component>\n  </keep-alive>\n  ```\n\n  - 如果参数里面是正则表达式或者方法的话，就需要动态绑定\n  - 同时使用了`include`和`exclude`，`exclude`的优先级会更高，以`exclude`的条件为主\n\n\n  ```js\n  <!-- 使用正则表达式，需使用 v-bind -->\n  <keep-alive :include=\"/c|j/\">\n    <component></component>\n  </keep-alive>\n  <!-- 动态判断 -->\n  <keep-alive :include=\"includedComponents\">\n    <router-view></router-view>\n  </keep-alive>\n  ```\n\n\n  ```js\n  <!-- 动态判断，exclude 的优先级会更高,只缓存 c 组件-->\n  <keep-alive :include=\"c,m\" exclude=\"m\" max=\"5\">\n    <component></component>\n  </keep-alive>\n  ```\n\n  \n\n  ### `keep-alive`的生命周期钩子函数\n\n  ##### 页面第一次进入时的执行顺序\n\n    - created > mounted > activated(进入时触发的钩子函数)\n\n    - 退出时触发deactivated\n\n    - 当再次进入（前进或者后退）时，只触发activated，并且：activated,deactivated这两个生命周期函数一定是要在使用了keep-alive组件后才会有的，否则则不存在\n\n  ##### 缓存路由里面的页面\n\n\n  ```js\n  <!-- 所有路径匹配到的视图组件都会被缓存,像 elemnt-admin 这些框架，多级路由就不会全部缓存，需要参考官方文档 -->\n  <keep-alive>\n      <router-view>\n      </router-view>\n  </keep-alive>\n  ```\n\n\n- 只缓存router-view里面的某个组件\n\n  - 可以用`include`和`exclude`，但是如果组件太多的话会很麻烦，不是很好的选择\n\n\n  ```js\n  <!-- 只有路径匹配到的 include 为 c 的组件会被缓存 -->\n  <keep-alive include=\"c\">\n      <router-view>\n      </router-view>\n  </keep-alive>\n  ```\n\n  \n\n  - 使用路由里面的 meta  属性，更方便扩展和管理\n\n  - app.vue,通过路由的属性来判断\n\n    \n\n  ```js\n  <keep-alive>\n      <router-view v-if=\"$route.meta.keepAlive\"></router-view>\n  </keep-alive>\n  <router-view v-if=\"!$route.meta.keepAlive\"></router-view>\n  ```\n\n  \n\n  ```js\n  {\n    path: '/',\n    name: 'C',\n    component: C,\n    meta: {\n        keepAlive: true // 需要被缓存\n    }\n  }\n  {\n    path: '/',\n    name: 'J',\n    component: J,\n    meta: {\n        keepAlive: fslse // 不需要被缓存\n    }\n  }\n  ```\n\n    \n\n","slug":"vue_deep","published":1,"updated":"2020-04-17T05:53:43.316Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck9azt8md00026sv59pwm82f6","content":"<h3 id=\"1-浏览器的渲染流程\"><a href=\"#1-浏览器的渲染流程\" class=\"headerlink\" title=\"1.浏览器的渲染流程\"></a>1.浏览器的渲染流程</h3><p>浏览器加载html的文件时，会先将html文件解析成一个<code>dom</code>数，并识别加载<code>dom</code>样式，和dom树一起合并渲染。有了渲染树之后，渲染引擎将计算所有元素的位置信息，最后绘制在屏幕上。js引擎和渲染引擎是两个独立的线程，但是js引擎可以触发渲染引擎工作，当我们用js来改变<code>dom</code>中元素的外观时，会调用相关的<code>api</code>方法操作<code>dom</code>对象，会触发渲染引擎回流或者重绘。</p>\n<ul>\n<li><p>回流： 当我们对<code>dom</code>的修改引发了元素尺寸的变化时，浏览器需要重新计算元素的大小和位置，最后将重新计算的结果绘制出来，这个过程称为回流。</p>\n</li>\n<li><p>重绘： 当我们对<code>dom</code>的修改只单纯改变元素的颜色时，浏览器此时并不需要重新计算元素的大小和位置，而只要重新绘制新样式。这个过程称为重绘</p>\n</li>\n<li><p>很显然回流比重绘更加耗费性能，当童通过js修改dom时，会触发渲染引擎的回流或者重绘，对性能的开销是非常大的，所以要尽可能的减少<code>dom</code>操作</p>\n</li>\n</ul>\n<h3 id=\"2-Vnode\"><a href=\"#2-Vnode\" class=\"headerlink\" title=\"2.Vnode\"></a>2.Vnode</h3><p>Vue渲染机制的优化上，引进了<code>virtual dom</code>的概念，它是用<code>Vnode</code>这个构造函数去描述一个<code>dom</code>节点,也就是操作<code>dom</code>时会优先操作<code>virtual dom</code>这个js对象，最后通过对比，将要改动的部分通知并更新到真实的<code>dom</code>中，进而减少渲染引擎绘制的次数，<code>virtual dom</code>就是一个中间桥梁</p>\n<h3 id=\"keep-alive\"><a href=\"#keep-alive\" class=\"headerlink\" title=\"keep- alive\"></a>keep- alive</h3><h4 id=\"基本用法和参数\"><a href=\"#基本用法和参数\" class=\"headerlink\" title=\"基本用法和参数\"></a>基本用法和参数</h4><ul>\n<li><p>保持组件的状态，避免重复渲染造成的性能损失</p>\n</li>\n<li><p>只需要在动态组件的外面包裹就好</p>\n</li>\n<li><p>可接受三个参数进行匹配，对应的组件即可进行缓存</p>\n<ul>\n<li><code>include</code> 包含的组件(可以为字符串，数组，以及正则表达式,只有匹配的组件会被缓存)</li>\n<li><code>exclude</code> 排除的组件(以为字符串，数组，以及正则表达式,任何匹配的组件都<code>不</code>会被缓存)</li>\n<li><code>max</code> 缓存组件的最大值(类型为字符或者数字,可以控制缓存组件的个数，超出会移出第一个缓存)</li>\n</ul>\n</li>\n</ul>\n<pre class=\"line-numbers language-js\"><code class=\"language-js\">  <span class=\"token operator\">&lt;</span><span class=\"token operator\">!</span><span class=\"token operator\">--</span> 只缓存组件 name 为 c 或者 j 的组件<span class=\"token operator\">--</span><span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span>keep<span class=\"token operator\">-</span>alive include<span class=\"token operator\">=</span><span class=\"token string\">\"c,j\"</span><span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>component<span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>component<span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>keep<span class=\"token operator\">-</span>alive<span class=\"token operator\">></span>\n\n  <span class=\"token operator\">&lt;</span><span class=\"token operator\">!</span><span class=\"token operator\">--</span> 组件 name为 m 的组件不缓存 <span class=\"token operator\">--</span><span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span>keep<span class=\"token operator\">-</span>alive exclude<span class=\"token operator\">=</span><span class=\"token string\">\"m\"</span><span class=\"token operator\">></span> \n    <span class=\"token operator\">&lt;</span>component<span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>component<span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>keep<span class=\"token operator\">-</span>alive<span class=\"token operator\">></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<ul>\n<li>如果参数里面是正则表达式或者方法的话，就需要动态绑定</li>\n<li>同时使用了<code>include</code>和<code>exclude</code>，<code>exclude</code>的优先级会更高，以<code>exclude</code>的条件为主</li>\n</ul>\n<pre class=\"line-numbers language-js\"><code class=\"language-js\">  <span class=\"token operator\">&lt;</span><span class=\"token operator\">!</span><span class=\"token operator\">--</span> 使用正则表达式，需使用 v<span class=\"token operator\">-</span>bind <span class=\"token operator\">--</span><span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span>keep<span class=\"token operator\">-</span>alive <span class=\"token punctuation\">:</span>include<span class=\"token operator\">=</span><span class=\"token string\">\"/c|j/\"</span><span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>component<span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>component<span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>keep<span class=\"token operator\">-</span>alive<span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span><span class=\"token operator\">!</span><span class=\"token operator\">--</span> 动态判断 <span class=\"token operator\">--</span><span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span>keep<span class=\"token operator\">-</span>alive <span class=\"token punctuation\">:</span>include<span class=\"token operator\">=</span><span class=\"token string\">\"includedComponents\"</span><span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>router<span class=\"token operator\">-</span>view<span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>router<span class=\"token operator\">-</span>view<span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>keep<span class=\"token operator\">-</span>alive<span class=\"token operator\">></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<pre class=\"line-numbers language-js\"><code class=\"language-js\">  <span class=\"token operator\">&lt;</span><span class=\"token operator\">!</span><span class=\"token operator\">--</span> 动态判断，exclude 的优先级会更高<span class=\"token punctuation\">,</span>只缓存 c 组件<span class=\"token operator\">--</span><span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span>keep<span class=\"token operator\">-</span>alive <span class=\"token punctuation\">:</span>include<span class=\"token operator\">=</span><span class=\"token string\">\"c,m\"</span> exclude<span class=\"token operator\">=</span><span class=\"token string\">\"m\"</span> max<span class=\"token operator\">=</span><span class=\"token string\">\"5\"</span><span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>component<span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>component<span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>keep<span class=\"token operator\">-</span>alive<span class=\"token operator\">></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n<h3 id=\"keep-alive的生命周期钩子函数\"><a href=\"#keep-alive的生命周期钩子函数\" class=\"headerlink\" title=\"keep-alive的生命周期钩子函数\"></a><code>keep-alive</code>的生命周期钩子函数</h3><h5 id=\"页面第一次进入时的执行顺序\"><a href=\"#页面第一次进入时的执行顺序\" class=\"headerlink\" title=\"页面第一次进入时的执行顺序\"></a>页面第一次进入时的执行顺序</h5><pre><code>- created &gt; mounted &gt; activated(进入时触发的钩子函数)\n\n- 退出时触发deactivated\n\n- 当再次进入（前进或者后退）时，只触发activated，并且：activated,deactivated这两个生命周期函数一定是要在使用了keep-alive组件后才会有的，否则则不存在</code></pre><h5 id=\"缓存路由里面的页面\"><a href=\"#缓存路由里面的页面\" class=\"headerlink\" title=\"缓存路由里面的页面\"></a>缓存路由里面的页面</h5><pre class=\"line-numbers language-js\"><code class=\"language-js\">  <span class=\"token operator\">&lt;</span><span class=\"token operator\">!</span><span class=\"token operator\">--</span> 所有路径匹配到的视图组件都会被缓存<span class=\"token punctuation\">,</span>像 elemnt<span class=\"token operator\">-</span>admin 这些框架，多级路由就不会全部缓存，需要参考官方文档 <span class=\"token operator\">--</span><span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span>keep<span class=\"token operator\">-</span>alive<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>router<span class=\"token operator\">-</span>view<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>router<span class=\"token operator\">-</span>view<span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>keep<span class=\"token operator\">-</span>alive<span class=\"token operator\">></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<ul>\n<li><p>只缓存router-view里面的某个组件</p>\n<ul>\n<li>可以用<code>include</code>和<code>exclude</code>，但是如果组件太多的话会很麻烦，不是很好的选择</li>\n</ul>\n</li>\n</ul>\n<pre class=\"line-numbers language-js\"><code class=\"language-js\">  <span class=\"token operator\">&lt;</span><span class=\"token operator\">!</span><span class=\"token operator\">--</span> 只有路径匹配到的 include 为 c 的组件会被缓存 <span class=\"token operator\">--</span><span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span>keep<span class=\"token operator\">-</span>alive include<span class=\"token operator\">=</span><span class=\"token string\">\"c\"</span><span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>router<span class=\"token operator\">-</span>view<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>router<span class=\"token operator\">-</span>view<span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>keep<span class=\"token operator\">-</span>alive<span class=\"token operator\">></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<ul>\n<li><p>使用路由里面的 meta  属性，更方便扩展和管理</p>\n</li>\n<li><p>app.vue,通过路由的属性来判断</p>\n</li>\n</ul>\n<pre class=\"line-numbers language-js\"><code class=\"language-js\">  <span class=\"token operator\">&lt;</span>keep<span class=\"token operator\">-</span>alive<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>router<span class=\"token operator\">-</span>view v<span class=\"token operator\">-</span><span class=\"token keyword\">if</span><span class=\"token operator\">=</span><span class=\"token string\">\"$route.meta.keepAlive\"</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>router<span class=\"token operator\">-</span>view<span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>keep<span class=\"token operator\">-</span>alive<span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span>router<span class=\"token operator\">-</span>view v<span class=\"token operator\">-</span><span class=\"token keyword\">if</span><span class=\"token operator\">=</span><span class=\"token string\">\"!$route.meta.keepAlive\"</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>router<span class=\"token operator\">-</span>view<span class=\"token operator\">></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n<pre class=\"line-numbers language-js\"><code class=\"language-js\">  <span class=\"token punctuation\">{</span>\n    path<span class=\"token punctuation\">:</span> <span class=\"token string\">'/'</span><span class=\"token punctuation\">,</span>\n    name<span class=\"token punctuation\">:</span> <span class=\"token string\">'C'</span><span class=\"token punctuation\">,</span>\n    component<span class=\"token punctuation\">:</span> C<span class=\"token punctuation\">,</span>\n    meta<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n        keepAlive<span class=\"token punctuation\">:</span> <span class=\"token boolean\">true</span> <span class=\"token comment\" spellcheck=\"true\">// 需要被缓存</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">{</span>\n    path<span class=\"token punctuation\">:</span> <span class=\"token string\">'/'</span><span class=\"token punctuation\">,</span>\n    name<span class=\"token punctuation\">:</span> <span class=\"token string\">'J'</span><span class=\"token punctuation\">,</span>\n    component<span class=\"token punctuation\">:</span> J<span class=\"token punctuation\">,</span>\n    meta<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n        keepAlive<span class=\"token punctuation\">:</span> fslse <span class=\"token comment\" spellcheck=\"true\">// 不需要被缓存</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n","site":{"data":{"yun":{"avatar":{"url":"https://mirror-gold-cdn.xitu.io/168e0917d2a9255e07b?imageView2/1/w/180/h/180/q/85/format/webp/interlace/1","rounded":true,"opacity":1},"social":[{"name":"QQ","link":"https://wpa.qq.com/msgrd?v=3&uin=571590938&site=qq&menu=yes","icon":"icon-qq-line","color":"#12B7F5"},{"name":"GitHub","link":"https://github.com/unclemin","icon":"icon-github-line","color":"#181717"},{"name":"E-Mail","link":"mailto:571590938@qq.com","icon":"icon-mail-line","color":"#8E71C1"}],"banner":{"enable":true,"title":"刚刚好的小站","src":"/js/ui/banner.js"},"notice":{"enable":true,"content":"Thanks for look my blog."},"sidebar":{"bg_image":"https://cdn.jsdelivr.net/gh/YunYouJun/cdn/img/bg/stars-timing-1.jpg","bg_position":"bottom 3rem center"},"lazyload":{"enable":true},"reward_settings":{"enable":false,"icon":"icon-hand-coin-line","comment":"I'm so cute. Please give me money."},"reward":[{"name":"支付宝","path":"https://cdn.jsdelivr.net/gh/YunYouJun/cdn/img/donate/alipay-qrcode.jpg","color":"#00A3EE","icon":"icon-alipay-line"},{"name":"QQ 支付","path":"https://cdn.jsdelivr.net/gh/YunYouJun/cdn/img/donate/qqpay-qrcode.png","color":"#12B7F5","icon":"icon-qq-line"},{"name":"微信支付","path":"https://cdn.jsdelivr.net/gh/YunYouJun/cdn/img/donate/wechatpay-qrcode.jpg","color":"#2DC100","icon":"icon-wechat-pay-line"}],"creative_commons":{"license":"by-nc-sa","post":true,"language":"deed.zh"},"footer":{"since":2019,"icon":{"name":"icon-cloud-line","animated":true,"color":"#0078E7"},"powered":{"enable":true,"version":true},"beian":{"enable":false},"live_time":{"enable":true,"prefix":"本博客已运行","suffix":"(●'◡'●)","start_time":"2019-08-12T00:00:00"}},"mourn":{"enable":true,"days":["4-4"]},"google_analytics":{"enable":true,"id":"UA-163425683-1"},"busuanzi":{"enable":true,"site_uv":true,"site_uv_icon":"icon-user-line","site_pv":true,"site_pv_icon":"icon-eye-line","page_pv":true,"page_pv_icon":"icon-eye-line"},"menu":{"home":{"path":"/","icon":"icon-home-4-line"},"archives":{"path":"/archives","icon":"icon-archive-line"},"tags":{"path":"/tags","icon":"icon-price-tag-3-line"},"categories":{"path":"/categories","icon":"icon-folder-2-line"},"custom":{"title":"文档","path":"/","icon":"icon-settings-line"}},"post_meta":{"item_text":true,"created_at":true,"updated_at":true,"categories":true,"tags":true},"trianglify":{"enable":false,"cell_size":75,"width":800,"height":600,"palette":"[\"YlGnBu\", \"GnBu\", \"Purples\", \"Blues\"]","opacity":0.5},"google_adsense":{"enable":false,"client":"ca-pub-2245427233262012"}}}},"excerpt":"","more":"<h3 id=\"1-浏览器的渲染流程\"><a href=\"#1-浏览器的渲染流程\" class=\"headerlink\" title=\"1.浏览器的渲染流程\"></a>1.浏览器的渲染流程</h3><p>浏览器加载html的文件时，会先将html文件解析成一个<code>dom</code>数，并识别加载<code>dom</code>样式，和dom树一起合并渲染。有了渲染树之后，渲染引擎将计算所有元素的位置信息，最后绘制在屏幕上。js引擎和渲染引擎是两个独立的线程，但是js引擎可以触发渲染引擎工作，当我们用js来改变<code>dom</code>中元素的外观时，会调用相关的<code>api</code>方法操作<code>dom</code>对象，会触发渲染引擎回流或者重绘。</p>\n<ul>\n<li><p>回流： 当我们对<code>dom</code>的修改引发了元素尺寸的变化时，浏览器需要重新计算元素的大小和位置，最后将重新计算的结果绘制出来，这个过程称为回流。</p>\n</li>\n<li><p>重绘： 当我们对<code>dom</code>的修改只单纯改变元素的颜色时，浏览器此时并不需要重新计算元素的大小和位置，而只要重新绘制新样式。这个过程称为重绘</p>\n</li>\n<li><p>很显然回流比重绘更加耗费性能，当童通过js修改dom时，会触发渲染引擎的回流或者重绘，对性能的开销是非常大的，所以要尽可能的减少<code>dom</code>操作</p>\n</li>\n</ul>\n<h3 id=\"2-Vnode\"><a href=\"#2-Vnode\" class=\"headerlink\" title=\"2.Vnode\"></a>2.Vnode</h3><p>Vue渲染机制的优化上，引进了<code>virtual dom</code>的概念，它是用<code>Vnode</code>这个构造函数去描述一个<code>dom</code>节点,也就是操作<code>dom</code>时会优先操作<code>virtual dom</code>这个js对象，最后通过对比，将要改动的部分通知并更新到真实的<code>dom</code>中，进而减少渲染引擎绘制的次数，<code>virtual dom</code>就是一个中间桥梁</p>\n<h3 id=\"keep-alive\"><a href=\"#keep-alive\" class=\"headerlink\" title=\"keep- alive\"></a>keep- alive</h3><h4 id=\"基本用法和参数\"><a href=\"#基本用法和参数\" class=\"headerlink\" title=\"基本用法和参数\"></a>基本用法和参数</h4><ul>\n<li><p>保持组件的状态，避免重复渲染造成的性能损失</p>\n</li>\n<li><p>只需要在动态组件的外面包裹就好</p>\n</li>\n<li><p>可接受三个参数进行匹配，对应的组件即可进行缓存</p>\n<ul>\n<li><code>include</code> 包含的组件(可以为字符串，数组，以及正则表达式,只有匹配的组件会被缓存)</li>\n<li><code>exclude</code> 排除的组件(以为字符串，数组，以及正则表达式,任何匹配的组件都<code>不</code>会被缓存)</li>\n<li><code>max</code> 缓存组件的最大值(类型为字符或者数字,可以控制缓存组件的个数，超出会移出第一个缓存)</li>\n</ul>\n</li>\n</ul>\n<pre><code class=\"js\">  &lt;!-- 只缓存组件 name 为 c 或者 j 的组件--&gt;\n  &lt;keep-alive include=&quot;c,j&quot;&gt;\n    &lt;component&gt;&lt;/component&gt;\n  &lt;/keep-alive&gt;\n\n  &lt;!-- 组件 name为 m 的组件不缓存 --&gt;\n  &lt;keep-alive exclude=&quot;m&quot;&gt; \n    &lt;component&gt;&lt;/component&gt;\n  &lt;/keep-alive&gt;</code></pre>\n<ul>\n<li>如果参数里面是正则表达式或者方法的话，就需要动态绑定</li>\n<li>同时使用了<code>include</code>和<code>exclude</code>，<code>exclude</code>的优先级会更高，以<code>exclude</code>的条件为主</li>\n</ul>\n<pre><code class=\"js\">  &lt;!-- 使用正则表达式，需使用 v-bind --&gt;\n  &lt;keep-alive :include=&quot;/c|j/&quot;&gt;\n    &lt;component&gt;&lt;/component&gt;\n  &lt;/keep-alive&gt;\n  &lt;!-- 动态判断 --&gt;\n  &lt;keep-alive :include=&quot;includedComponents&quot;&gt;\n    &lt;router-view&gt;&lt;/router-view&gt;\n  &lt;/keep-alive&gt;</code></pre>\n<pre><code class=\"js\">  &lt;!-- 动态判断，exclude 的优先级会更高,只缓存 c 组件--&gt;\n  &lt;keep-alive :include=&quot;c,m&quot; exclude=&quot;m&quot; max=&quot;5&quot;&gt;\n    &lt;component&gt;&lt;/component&gt;\n  &lt;/keep-alive&gt;</code></pre>\n<h3 id=\"keep-alive的生命周期钩子函数\"><a href=\"#keep-alive的生命周期钩子函数\" class=\"headerlink\" title=\"keep-alive的生命周期钩子函数\"></a><code>keep-alive</code>的生命周期钩子函数</h3><h5 id=\"页面第一次进入时的执行顺序\"><a href=\"#页面第一次进入时的执行顺序\" class=\"headerlink\" title=\"页面第一次进入时的执行顺序\"></a>页面第一次进入时的执行顺序</h5><pre><code>- created &gt; mounted &gt; activated(进入时触发的钩子函数)\n\n- 退出时触发deactivated\n\n- 当再次进入（前进或者后退）时，只触发activated，并且：activated,deactivated这两个生命周期函数一定是要在使用了keep-alive组件后才会有的，否则则不存在</code></pre><h5 id=\"缓存路由里面的页面\"><a href=\"#缓存路由里面的页面\" class=\"headerlink\" title=\"缓存路由里面的页面\"></a>缓存路由里面的页面</h5><pre><code class=\"js\">  &lt;!-- 所有路径匹配到的视图组件都会被缓存,像 elemnt-admin 这些框架，多级路由就不会全部缓存，需要参考官方文档 --&gt;\n  &lt;keep-alive&gt;\n      &lt;router-view&gt;\n      &lt;/router-view&gt;\n  &lt;/keep-alive&gt;</code></pre>\n<ul>\n<li><p>只缓存router-view里面的某个组件</p>\n<ul>\n<li>可以用<code>include</code>和<code>exclude</code>，但是如果组件太多的话会很麻烦，不是很好的选择</li>\n</ul>\n</li>\n</ul>\n<pre><code class=\"js\">  &lt;!-- 只有路径匹配到的 include 为 c 的组件会被缓存 --&gt;\n  &lt;keep-alive include=&quot;c&quot;&gt;\n      &lt;router-view&gt;\n      &lt;/router-view&gt;\n  &lt;/keep-alive&gt;</code></pre>\n<ul>\n<li><p>使用路由里面的 meta  属性，更方便扩展和管理</p>\n</li>\n<li><p>app.vue,通过路由的属性来判断</p>\n</li>\n</ul>\n<pre><code class=\"js\">  &lt;keep-alive&gt;\n      &lt;router-view v-if=&quot;$route.meta.keepAlive&quot;&gt;&lt;/router-view&gt;\n  &lt;/keep-alive&gt;\n  &lt;router-view v-if=&quot;!$route.meta.keepAlive&quot;&gt;&lt;/router-view&gt;</code></pre>\n<pre><code class=\"js\">  {\n    path: &#39;/&#39;,\n    name: &#39;C&#39;,\n    component: C,\n    meta: {\n        keepAlive: true // 需要被缓存\n    }\n  }\n  {\n    path: &#39;/&#39;,\n    name: &#39;J&#39;,\n    component: J,\n    meta: {\n        keepAlive: fslse // 不需要被缓存\n    }\n  }</code></pre>\n"},{"title":"flutter 生成二维码保存到相册","date":"2020-04-12T06:53:27.000Z","top":true,"_content":"\n\n\n## 1.生成二维码\n\n- 引入`qr_flutter`: ^3.2.0 插件(最新版本号请看pub.dev)\n\n  [https://pub.flutter-io.cn/packages/qr_flutter]: \n\n```dart\ndependencies:\n  qr_flutter: ^3.2.0\n```\n\n-  在页面中引入模块（更多配置参数查询插件）\n\n```dart\nimport 'package:flutter/rendering.dart';\n```\n\n```dart\nQrImage(\n  data: \"1234567890\", // 生成二维码内容\n  version: QrVersions.auto,\n  size: 200.0,\n),\n```\n\n![](https://cdn.jsdelivr.net/gh/unclemin/images/Img/dartcode.png)\n\n![](https://cdn.jsdelivr.net/gh/unclemin/images/Img/微信截图_20200422102231.png)\n\n- 最终生成效果， 按钮是自己添加\n\n\n\n## 2.保存二维码到相册\n\n- 这里需要安装两插件\n- 插件地址(更多配置可参考)\n  - https://pub.flutter-io.cn/packages/image_gallery_saver\n  - https://pub.flutter-io.cn/packages/permission_handler\n\n```dart\nimage_gallery_saver: ^1.2.2 #保存图片到相册\npermission_handler: ^5.0.0+hotfix.3 #获取手机权限\n```\n\n#### \t1.获取二维码截图\n\n- 这里是生成的二维码，并不是一张图片，所以需要先截取二维码部分的`Widget`\n  - 引入所需模块\n  - 初始化`GlobalKey`\n  - 使用`RepaintBoundary`包裹我们要截图的组件\n  - 这里有个坑，生成的二维码是黑色的方块加白色的底，如果没有`Container`包裹住`QrImage`的话，保存的图片是全黑色的，因此`Container`的`color`一定要给个颜色\n\n```dart\nimport 'package:flutter/rendering.dart';\nimport 'dart:ui' as ui;\n\nGlobalKey repaintKey = GlobalKey();\n\nRepaintBoundary(\n  key: repaintKey,\n  child: Container(\n    height: 200,\n    width: 200,\n    color: Colors.white,\n    child: QrImage(\n      data: \"1234567890\",\n      version: QrVersions.auto,\n      size: 200.0,\n    ),\n  ),\n),\n```\n\n![](https://cdn.jsdelivr.net/gh/unclemin/images/Img/123.png)\n\n#### 2.保存到相册\n\n- 引入保存图片和检测权限的插件\n\n```dart\nimport 'package:image_gallery_saver/image_gallery_saver.dart';\nimport 'package:permission_handler/permission_handler.dart';\n```\n\n- 点击保存方法调用\n\n```dart\nFlatButton(\n  onPressed: () async {\n    await getPerm();\n  },\n  child: Text(\n    '保存二维码到相册',\n    style: TextStyle(color: Color.fromRGBO(15, 110, 255, 1)),\n  ),\n  color: Color.fromRGBO(240, 246, 255, 1),\n)\n```\n\n- 检测是否有保存权限函数（具体可看插件）,注意运行报错的话，需要 `flutter clean` 然后 `flutter run` 重新运行一下\n\n```dart\nFuture getPerm() async {\n    Map<Permission, PermissionStatus> statuses = await [\n      Permission.storage,\n    ].request();\n    var status = await Permission.storage.status;\n    print(status);\n    if (status.isUndetermined) {\n      openAppSettings();// 没有权限打开设置页面\n    } else {\n      capturePng();// 已有权限开始保存\n    }\n}\n```\n\n- 保存函数\n\n```dart\n  Future<String> capturePng() async {\n    try {\n      print('开始保存');\n      RenderRepaintBoundary boundary =\n          repaintKey.currentContext.findRenderObject();\n      ui.Image image = await boundary.toImage();\n      ByteData byteData =\n          await image.toByteData(format: ui.ImageByteFormat.png);\n      final result =\n          await ImageGallerySaver.saveImage(byteData.buffer.asUint8List());\n      print(result);// result是图片地址\n      BotToast.showSimpleNotification(title: '保存成功');\n    } catch (e) {\n      print(e);\n    }\n    return null;\n  } \n```\n\n到此生成二维码并保存到相册就ok了 ,主要就是注意二维码背景色的问题，还有就是打开手机保存权限，注意各个版本插件使用方法按照官方的来，谷歌出来的很多版本太低了，使用方法也不一样,注意检查权限运行报错的话，需要 `flutter clean` 然后 `flutter run` 重新运行一下\n\n\n\n","source":"_posts/flutter_code.md","raw":"---\ntitle: flutter 生成二维码保存到相册\ndate: 2020-04-12 14:53:27\ntags: \n  - flutter\ncategories: flutter\ntop: true\n---\n\n\n\n## 1.生成二维码\n\n- 引入`qr_flutter`: ^3.2.0 插件(最新版本号请看pub.dev)\n\n  [https://pub.flutter-io.cn/packages/qr_flutter]: \n\n```dart\ndependencies:\n  qr_flutter: ^3.2.0\n```\n\n-  在页面中引入模块（更多配置参数查询插件）\n\n```dart\nimport 'package:flutter/rendering.dart';\n```\n\n```dart\nQrImage(\n  data: \"1234567890\", // 生成二维码内容\n  version: QrVersions.auto,\n  size: 200.0,\n),\n```\n\n![](https://cdn.jsdelivr.net/gh/unclemin/images/Img/dartcode.png)\n\n![](https://cdn.jsdelivr.net/gh/unclemin/images/Img/微信截图_20200422102231.png)\n\n- 最终生成效果， 按钮是自己添加\n\n\n\n## 2.保存二维码到相册\n\n- 这里需要安装两插件\n- 插件地址(更多配置可参考)\n  - https://pub.flutter-io.cn/packages/image_gallery_saver\n  - https://pub.flutter-io.cn/packages/permission_handler\n\n```dart\nimage_gallery_saver: ^1.2.2 #保存图片到相册\npermission_handler: ^5.0.0+hotfix.3 #获取手机权限\n```\n\n#### \t1.获取二维码截图\n\n- 这里是生成的二维码，并不是一张图片，所以需要先截取二维码部分的`Widget`\n  - 引入所需模块\n  - 初始化`GlobalKey`\n  - 使用`RepaintBoundary`包裹我们要截图的组件\n  - 这里有个坑，生成的二维码是黑色的方块加白色的底，如果没有`Container`包裹住`QrImage`的话，保存的图片是全黑色的，因此`Container`的`color`一定要给个颜色\n\n```dart\nimport 'package:flutter/rendering.dart';\nimport 'dart:ui' as ui;\n\nGlobalKey repaintKey = GlobalKey();\n\nRepaintBoundary(\n  key: repaintKey,\n  child: Container(\n    height: 200,\n    width: 200,\n    color: Colors.white,\n    child: QrImage(\n      data: \"1234567890\",\n      version: QrVersions.auto,\n      size: 200.0,\n    ),\n  ),\n),\n```\n\n![](https://cdn.jsdelivr.net/gh/unclemin/images/Img/123.png)\n\n#### 2.保存到相册\n\n- 引入保存图片和检测权限的插件\n\n```dart\nimport 'package:image_gallery_saver/image_gallery_saver.dart';\nimport 'package:permission_handler/permission_handler.dart';\n```\n\n- 点击保存方法调用\n\n```dart\nFlatButton(\n  onPressed: () async {\n    await getPerm();\n  },\n  child: Text(\n    '保存二维码到相册',\n    style: TextStyle(color: Color.fromRGBO(15, 110, 255, 1)),\n  ),\n  color: Color.fromRGBO(240, 246, 255, 1),\n)\n```\n\n- 检测是否有保存权限函数（具体可看插件）,注意运行报错的话，需要 `flutter clean` 然后 `flutter run` 重新运行一下\n\n```dart\nFuture getPerm() async {\n    Map<Permission, PermissionStatus> statuses = await [\n      Permission.storage,\n    ].request();\n    var status = await Permission.storage.status;\n    print(status);\n    if (status.isUndetermined) {\n      openAppSettings();// 没有权限打开设置页面\n    } else {\n      capturePng();// 已有权限开始保存\n    }\n}\n```\n\n- 保存函数\n\n```dart\n  Future<String> capturePng() async {\n    try {\n      print('开始保存');\n      RenderRepaintBoundary boundary =\n          repaintKey.currentContext.findRenderObject();\n      ui.Image image = await boundary.toImage();\n      ByteData byteData =\n          await image.toByteData(format: ui.ImageByteFormat.png);\n      final result =\n          await ImageGallerySaver.saveImage(byteData.buffer.asUint8List());\n      print(result);// result是图片地址\n      BotToast.showSimpleNotification(title: '保存成功');\n    } catch (e) {\n      print(e);\n    }\n    return null;\n  } \n```\n\n到此生成二维码并保存到相册就ok了 ,主要就是注意二维码背景色的问题，还有就是打开手机保存权限，注意各个版本插件使用方法按照官方的来，谷歌出来的很多版本太低了，使用方法也不一样,注意检查权限运行报错的话，需要 `flutter clean` 然后 `flutter run` 重新运行一下\n\n\n\n","slug":"flutter_code","published":1,"updated":"2020-04-22T06:14:26.342Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck9azt8mg00066sv5h58bhhgr","content":"<h2 id=\"1-生成二维码\"><a href=\"#1-生成二维码\" class=\"headerlink\" title=\"1.生成二维码\"></a>1.生成二维码</h2><ul>\n<li><p>引入<code>qr_flutter</code>: ^3.2.0 插件(最新版本号请看pub.dev)</p>\n<p>[<a href=\"https://pub.flutter-io.cn/packages/qr_flutter]\" target=\"_blank\" rel=\"noopener\">https://pub.flutter-io.cn/packages/qr_flutter]</a>: </p>\n</li>\n</ul>\n<pre class=\"line-numbers language-dart\"><code class=\"language-dart\">dependencies<span class=\"token punctuation\">:</span>\n  qr_flutter<span class=\"token punctuation\">:</span> <span class=\"token operator\">^</span><span class=\"token number\">3.2</span><span class=\"token punctuation\">.</span><span class=\"token number\">0</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<ul>\n<li>在页面中引入模块（更多配置参数查询插件）</li>\n</ul>\n<pre class=\"line-numbers language-dart\"><code class=\"language-dart\"><span class=\"token keyword\">import</span> <span class=\"token string\">'package:flutter/rendering.dart'</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<pre class=\"line-numbers language-dart\"><code class=\"language-dart\"><span class=\"token function\">QrImage</span><span class=\"token punctuation\">(</span>\n  data<span class=\"token punctuation\">:</span> <span class=\"token string\">\"1234567890\"</span><span class=\"token punctuation\">,</span> <span class=\"token comment\" spellcheck=\"true\">// 生成二维码内容</span>\n  version<span class=\"token punctuation\">:</span> QrVersions<span class=\"token punctuation\">.</span>auto<span class=\"token punctuation\">,</span>\n  size<span class=\"token punctuation\">:</span> <span class=\"token number\">200.0</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p><img src=\"https://cdn.jsdelivr.net/gh/unclemin/images/Img/dartcode.png\" alt=\"\" loading=\"lazy\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/unclemin/images/Img/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20200422102231.png\" alt=\"\" loading=\"lazy\"></p>\n<ul>\n<li>最终生成效果， 按钮是自己添加</li>\n</ul>\n<h2 id=\"2-保存二维码到相册\"><a href=\"#2-保存二维码到相册\" class=\"headerlink\" title=\"2.保存二维码到相册\"></a>2.保存二维码到相册</h2><ul>\n<li>这里需要安装两插件</li>\n<li>插件地址(更多配置可参考)<ul>\n<li><a href=\"https://pub.flutter-io.cn/packages/image_gallery_saver\" target=\"_blank\" rel=\"noopener\">https://pub.flutter-io.cn/packages/image_gallery_saver</a></li>\n<li><a href=\"https://pub.flutter-io.cn/packages/permission_handler\" target=\"_blank\" rel=\"noopener\">https://pub.flutter-io.cn/packages/permission_handler</a></li>\n</ul>\n</li>\n</ul>\n<pre class=\"line-numbers language-dart\"><code class=\"language-dart\">image_gallery_saver<span class=\"token punctuation\">:</span> <span class=\"token operator\">^</span><span class=\"token number\">1.2</span><span class=\"token punctuation\">.</span><span class=\"token number\">2</span> #保存图片到相册\npermission_handler<span class=\"token punctuation\">:</span> <span class=\"token operator\">^</span><span class=\"token number\">5.0</span><span class=\"token punctuation\">.</span><span class=\"token number\">0</span><span class=\"token operator\">+</span>hotfix<span class=\"token number\">.3</span> #获取手机权限<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<h4 id=\"1-获取二维码截图\"><a href=\"#1-获取二维码截图\" class=\"headerlink\" title=\"1.获取二维码截图\"></a>1.获取二维码截图</h4><ul>\n<li>这里是生成的二维码，并不是一张图片，所以需要先截取二维码部分的<code>Widget</code><ul>\n<li>引入所需模块</li>\n<li>初始化<code>GlobalKey</code></li>\n<li>使用<code>RepaintBoundary</code>包裹我们要截图的组件</li>\n<li>这里有个坑，生成的二维码是黑色的方块加白色的底，如果没有<code>Container</code>包裹住<code>QrImage</code>的话，保存的图片是全黑色的，因此<code>Container</code>的<code>color</code>一定要给个颜色</li>\n</ul>\n</li>\n</ul>\n<pre class=\"line-numbers language-dart\"><code class=\"language-dart\"><span class=\"token keyword\">import</span> <span class=\"token string\">'package:flutter/rendering.dart'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token string\">'dart:ui'</span> <span class=\"token operator\">as</span> ui<span class=\"token punctuation\">;</span>\n\nGlobalKey repaintKey <span class=\"token operator\">=</span> <span class=\"token function\">GlobalKey</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token function\">RepaintBoundary</span><span class=\"token punctuation\">(</span>\n  key<span class=\"token punctuation\">:</span> repaintKey<span class=\"token punctuation\">,</span>\n  child<span class=\"token punctuation\">:</span> <span class=\"token function\">Container</span><span class=\"token punctuation\">(</span>\n    height<span class=\"token punctuation\">:</span> <span class=\"token number\">200</span><span class=\"token punctuation\">,</span>\n    width<span class=\"token punctuation\">:</span> <span class=\"token number\">200</span><span class=\"token punctuation\">,</span>\n    color<span class=\"token punctuation\">:</span> Colors<span class=\"token punctuation\">.</span>white<span class=\"token punctuation\">,</span>\n    child<span class=\"token punctuation\">:</span> <span class=\"token function\">QrImage</span><span class=\"token punctuation\">(</span>\n      data<span class=\"token punctuation\">:</span> <span class=\"token string\">\"1234567890\"</span><span class=\"token punctuation\">,</span>\n      version<span class=\"token punctuation\">:</span> QrVersions<span class=\"token punctuation\">.</span>auto<span class=\"token punctuation\">,</span>\n      size<span class=\"token punctuation\">:</span> <span class=\"token number\">200.0</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p><img src=\"https://cdn.jsdelivr.net/gh/unclemin/images/Img/123.png\" alt=\"\" loading=\"lazy\"></p>\n<h4 id=\"2-保存到相册\"><a href=\"#2-保存到相册\" class=\"headerlink\" title=\"2.保存到相册\"></a>2.保存到相册</h4><ul>\n<li>引入保存图片和检测权限的插件</li>\n</ul>\n<pre class=\"line-numbers language-dart\"><code class=\"language-dart\"><span class=\"token keyword\">import</span> <span class=\"token string\">'package:image_gallery_saver/image_gallery_saver.dart'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token string\">'package:permission_handler/permission_handler.dart'</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<ul>\n<li>点击保存方法调用</li>\n</ul>\n<pre class=\"line-numbers language-dart\"><code class=\"language-dart\"><span class=\"token function\">FlatButton</span><span class=\"token punctuation\">(</span>\n  onPressed<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">async</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">await</span> <span class=\"token function\">getPerm</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  child<span class=\"token punctuation\">:</span> <span class=\"token function\">Text</span><span class=\"token punctuation\">(</span>\n    <span class=\"token string\">'保存二维码到相册'</span><span class=\"token punctuation\">,</span>\n    style<span class=\"token punctuation\">:</span> <span class=\"token function\">TextStyle</span><span class=\"token punctuation\">(</span>color<span class=\"token punctuation\">:</span> Color<span class=\"token punctuation\">.</span><span class=\"token function\">fromRGBO</span><span class=\"token punctuation\">(</span><span class=\"token number\">15</span><span class=\"token punctuation\">,</span> <span class=\"token number\">110</span><span class=\"token punctuation\">,</span> <span class=\"token number\">255</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  color<span class=\"token punctuation\">:</span> Color<span class=\"token punctuation\">.</span><span class=\"token function\">fromRGBO</span><span class=\"token punctuation\">(</span><span class=\"token number\">240</span><span class=\"token punctuation\">,</span> <span class=\"token number\">246</span><span class=\"token punctuation\">,</span> <span class=\"token number\">255</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<ul>\n<li>检测是否有保存权限函数（具体可看插件）,注意运行报错的话，需要 <code>flutter clean</code> 然后 <code>flutter run</code> 重新运行一下</li>\n</ul>\n<pre class=\"line-numbers language-dart\"><code class=\"language-dart\">Future <span class=\"token function\">getPerm</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">async</span> <span class=\"token punctuation\">{</span>\n    Map<span class=\"token operator\">&lt;</span>Permission<span class=\"token punctuation\">,</span> PermissionStatus<span class=\"token operator\">></span> statuses <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token punctuation\">[</span>\n      Permission<span class=\"token punctuation\">.</span>storage<span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">request</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">var</span> status <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> Permission<span class=\"token punctuation\">.</span>storage<span class=\"token punctuation\">.</span>status<span class=\"token punctuation\">;</span>\n    <span class=\"token function\">print</span><span class=\"token punctuation\">(</span>status<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>status<span class=\"token punctuation\">.</span>isUndetermined<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token function\">openAppSettings</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\" spellcheck=\"true\">// 没有权限打开设置页面</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token function\">capturePng</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\" spellcheck=\"true\">// 已有权限开始保存</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<ul>\n<li>保存函数</li>\n</ul>\n<pre class=\"line-numbers language-dart\"><code class=\"language-dart\">  Future<span class=\"token operator\">&lt;</span>String<span class=\"token operator\">></span> <span class=\"token function\">capturePng</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">async</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'开始保存'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      RenderRepaintBoundary boundary <span class=\"token operator\">=</span>\n          repaintKey<span class=\"token punctuation\">.</span>currentContext<span class=\"token punctuation\">.</span><span class=\"token function\">findRenderObject</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      ui<span class=\"token punctuation\">.</span>Image image <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> boundary<span class=\"token punctuation\">.</span><span class=\"token function\">toImage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      ByteData byteData <span class=\"token operator\">=</span>\n          <span class=\"token keyword\">await</span> image<span class=\"token punctuation\">.</span><span class=\"token function\">toByteData</span><span class=\"token punctuation\">(</span>format<span class=\"token punctuation\">:</span> ui<span class=\"token punctuation\">.</span>ImageByteFormat<span class=\"token punctuation\">.</span>png<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">final</span> result <span class=\"token operator\">=</span>\n          <span class=\"token keyword\">await</span> ImageGallerySaver<span class=\"token punctuation\">.</span><span class=\"token function\">saveImage</span><span class=\"token punctuation\">(</span>byteData<span class=\"token punctuation\">.</span>buffer<span class=\"token punctuation\">.</span><span class=\"token function\">asUint8List</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token function\">print</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\" spellcheck=\"true\">// result是图片地址</span>\n      BotToast<span class=\"token punctuation\">.</span><span class=\"token function\">showSimpleNotification</span><span class=\"token punctuation\">(</span>title<span class=\"token punctuation\">:</span> <span class=\"token string\">'保存成功'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token function\">print</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span> <span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>到此生成二维码并保存到相册就ok了 ,主要就是注意二维码背景色的问题，还有就是打开手机保存权限，注意各个版本插件使用方法按照官方的来，谷歌出来的很多版本太低了，使用方法也不一样,注意检查权限运行报错的话，需要 <code>flutter clean</code> 然后 <code>flutter run</code> 重新运行一下</p>\n","site":{"data":{"yun":{"avatar":{"url":"https://mirror-gold-cdn.xitu.io/168e0917d2a9255e07b?imageView2/1/w/180/h/180/q/85/format/webp/interlace/1","rounded":true,"opacity":1},"social":[{"name":"QQ","link":"https://wpa.qq.com/msgrd?v=3&uin=571590938&site=qq&menu=yes","icon":"icon-qq-line","color":"#12B7F5"},{"name":"GitHub","link":"https://github.com/unclemin","icon":"icon-github-line","color":"#181717"},{"name":"E-Mail","link":"mailto:571590938@qq.com","icon":"icon-mail-line","color":"#8E71C1"}],"banner":{"enable":true,"title":"刚刚好的小站","src":"/js/ui/banner.js"},"notice":{"enable":true,"content":"Thanks for look my blog."},"sidebar":{"bg_image":"https://cdn.jsdelivr.net/gh/YunYouJun/cdn/img/bg/stars-timing-1.jpg","bg_position":"bottom 3rem center"},"lazyload":{"enable":true},"reward_settings":{"enable":false,"icon":"icon-hand-coin-line","comment":"I'm so cute. Please give me money."},"reward":[{"name":"支付宝","path":"https://cdn.jsdelivr.net/gh/YunYouJun/cdn/img/donate/alipay-qrcode.jpg","color":"#00A3EE","icon":"icon-alipay-line"},{"name":"QQ 支付","path":"https://cdn.jsdelivr.net/gh/YunYouJun/cdn/img/donate/qqpay-qrcode.png","color":"#12B7F5","icon":"icon-qq-line"},{"name":"微信支付","path":"https://cdn.jsdelivr.net/gh/YunYouJun/cdn/img/donate/wechatpay-qrcode.jpg","color":"#2DC100","icon":"icon-wechat-pay-line"}],"creative_commons":{"license":"by-nc-sa","post":true,"language":"deed.zh"},"footer":{"since":2019,"icon":{"name":"icon-cloud-line","animated":true,"color":"#0078E7"},"powered":{"enable":true,"version":true},"beian":{"enable":false},"live_time":{"enable":true,"prefix":"本博客已运行","suffix":"(●'◡'●)","start_time":"2019-08-12T00:00:00"}},"mourn":{"enable":true,"days":["4-4"]},"google_analytics":{"enable":true,"id":"UA-163425683-1"},"busuanzi":{"enable":true,"site_uv":true,"site_uv_icon":"icon-user-line","site_pv":true,"site_pv_icon":"icon-eye-line","page_pv":true,"page_pv_icon":"icon-eye-line"},"menu":{"home":{"path":"/","icon":"icon-home-4-line"},"archives":{"path":"/archives","icon":"icon-archive-line"},"tags":{"path":"/tags","icon":"icon-price-tag-3-line"},"categories":{"path":"/categories","icon":"icon-folder-2-line"},"custom":{"title":"文档","path":"/","icon":"icon-settings-line"}},"post_meta":{"item_text":true,"created_at":true,"updated_at":true,"categories":true,"tags":true},"trianglify":{"enable":false,"cell_size":75,"width":800,"height":600,"palette":"[\"YlGnBu\", \"GnBu\", \"Purples\", \"Blues\"]","opacity":0.5},"google_adsense":{"enable":false,"client":"ca-pub-2245427233262012"}}}},"excerpt":"","more":"<h2 id=\"1-生成二维码\"><a href=\"#1-生成二维码\" class=\"headerlink\" title=\"1.生成二维码\"></a>1.生成二维码</h2><ul>\n<li><p>引入<code>qr_flutter</code>: ^3.2.0 插件(最新版本号请看pub.dev)</p>\n<p>[<a href=\"https://pub.flutter-io.cn/packages/qr_flutter]\" target=\"_blank\" rel=\"noopener\">https://pub.flutter-io.cn/packages/qr_flutter]</a>: </p>\n</li>\n</ul>\n<pre><code class=\"dart\">dependencies:\n  qr_flutter: ^3.2.0</code></pre>\n<ul>\n<li>在页面中引入模块（更多配置参数查询插件）</li>\n</ul>\n<pre><code class=\"dart\">import &#39;package:flutter/rendering.dart&#39;;</code></pre>\n<pre><code class=\"dart\">QrImage(\n  data: &quot;1234567890&quot;, // 生成二维码内容\n  version: QrVersions.auto,\n  size: 200.0,\n),</code></pre>\n<p><img src=\"https://cdn.jsdelivr.net/gh/unclemin/images/Img/dartcode.png\" alt=\"\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/unclemin/images/Img/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20200422102231.png\" alt=\"\"></p>\n<ul>\n<li>最终生成效果， 按钮是自己添加</li>\n</ul>\n<h2 id=\"2-保存二维码到相册\"><a href=\"#2-保存二维码到相册\" class=\"headerlink\" title=\"2.保存二维码到相册\"></a>2.保存二维码到相册</h2><ul>\n<li>这里需要安装两插件</li>\n<li>插件地址(更多配置可参考)<ul>\n<li><a href=\"https://pub.flutter-io.cn/packages/image_gallery_saver\" target=\"_blank\" rel=\"noopener\">https://pub.flutter-io.cn/packages/image_gallery_saver</a></li>\n<li><a href=\"https://pub.flutter-io.cn/packages/permission_handler\" target=\"_blank\" rel=\"noopener\">https://pub.flutter-io.cn/packages/permission_handler</a></li>\n</ul>\n</li>\n</ul>\n<pre><code class=\"dart\">image_gallery_saver: ^1.2.2 #保存图片到相册\npermission_handler: ^5.0.0+hotfix.3 #获取手机权限</code></pre>\n<h4 id=\"1-获取二维码截图\"><a href=\"#1-获取二维码截图\" class=\"headerlink\" title=\"1.获取二维码截图\"></a>1.获取二维码截图</h4><ul>\n<li>这里是生成的二维码，并不是一张图片，所以需要先截取二维码部分的<code>Widget</code><ul>\n<li>引入所需模块</li>\n<li>初始化<code>GlobalKey</code></li>\n<li>使用<code>RepaintBoundary</code>包裹我们要截图的组件</li>\n<li>这里有个坑，生成的二维码是黑色的方块加白色的底，如果没有<code>Container</code>包裹住<code>QrImage</code>的话，保存的图片是全黑色的，因此<code>Container</code>的<code>color</code>一定要给个颜色</li>\n</ul>\n</li>\n</ul>\n<pre><code class=\"dart\">import &#39;package:flutter/rendering.dart&#39;;\nimport &#39;dart:ui&#39; as ui;\n\nGlobalKey repaintKey = GlobalKey();\n\nRepaintBoundary(\n  key: repaintKey,\n  child: Container(\n    height: 200,\n    width: 200,\n    color: Colors.white,\n    child: QrImage(\n      data: &quot;1234567890&quot;,\n      version: QrVersions.auto,\n      size: 200.0,\n    ),\n  ),\n),</code></pre>\n<p><img src=\"https://cdn.jsdelivr.net/gh/unclemin/images/Img/123.png\" alt=\"\"></p>\n<h4 id=\"2-保存到相册\"><a href=\"#2-保存到相册\" class=\"headerlink\" title=\"2.保存到相册\"></a>2.保存到相册</h4><ul>\n<li>引入保存图片和检测权限的插件</li>\n</ul>\n<pre><code class=\"dart\">import &#39;package:image_gallery_saver/image_gallery_saver.dart&#39;;\nimport &#39;package:permission_handler/permission_handler.dart&#39;;</code></pre>\n<ul>\n<li>点击保存方法调用</li>\n</ul>\n<pre><code class=\"dart\">FlatButton(\n  onPressed: () async {\n    await getPerm();\n  },\n  child: Text(\n    &#39;保存二维码到相册&#39;,\n    style: TextStyle(color: Color.fromRGBO(15, 110, 255, 1)),\n  ),\n  color: Color.fromRGBO(240, 246, 255, 1),\n)</code></pre>\n<ul>\n<li>检测是否有保存权限函数（具体可看插件）,注意运行报错的话，需要 <code>flutter clean</code> 然后 <code>flutter run</code> 重新运行一下</li>\n</ul>\n<pre><code class=\"dart\">Future getPerm() async {\n    Map&lt;Permission, PermissionStatus&gt; statuses = await [\n      Permission.storage,\n    ].request();\n    var status = await Permission.storage.status;\n    print(status);\n    if (status.isUndetermined) {\n      openAppSettings();// 没有权限打开设置页面\n    } else {\n      capturePng();// 已有权限开始保存\n    }\n}</code></pre>\n<ul>\n<li>保存函数</li>\n</ul>\n<pre><code class=\"dart\">  Future&lt;String&gt; capturePng() async {\n    try {\n      print(&#39;开始保存&#39;);\n      RenderRepaintBoundary boundary =\n          repaintKey.currentContext.findRenderObject();\n      ui.Image image = await boundary.toImage();\n      ByteData byteData =\n          await image.toByteData(format: ui.ImageByteFormat.png);\n      final result =\n          await ImageGallerySaver.saveImage(byteData.buffer.asUint8List());\n      print(result);// result是图片地址\n      BotToast.showSimpleNotification(title: &#39;保存成功&#39;);\n    } catch (e) {\n      print(e);\n    }\n    return null;\n  } </code></pre>\n<p>到此生成二维码并保存到相册就ok了 ,主要就是注意二维码背景色的问题，还有就是打开手机保存权限，注意各个版本插件使用方法按照官方的来，谷歌出来的很多版本太低了，使用方法也不一样,注意检查权限运行报错的话，需要 <code>flutter clean</code> 然后 <code>flutter run</code> 重新运行一下</p>\n"}],"PostAsset":[],"PostCategory":[{"post_id":"ck9azt8m600006sv5afua47ni","category_id":"ck9azt8me00046sv53qnegkcq","_id":"ck9azt8ml000f6sv56eat0v85"},{"post_id":"ck9azt8md00026sv59pwm82f6","category_id":"ck9azt8me00046sv53qnegkcq","_id":"ck9azt8mm000i6sv5edet7o6m"},{"post_id":"ck9azt8mg00066sv5h58bhhgr","category_id":"ck9azt8ml000e6sv5dl939mxg","_id":"ck9azt8mm000k6sv58wx2hg21"}],"PostTag":[{"post_id":"ck9azt8m600006sv5afua47ni","tag_id":"ck9azt8mf00056sv54gxu19i2","_id":"ck9azt8mk000c6sv50ud47xgo"},{"post_id":"ck9azt8md00026sv59pwm82f6","tag_id":"ck9azt8mi000a6sv574sifraq","_id":"ck9azt8ml000h6sv53kes5d6a"},{"post_id":"ck9azt8mg00066sv5h58bhhgr","tag_id":"ck9azt8ml000g6sv59y5o1znz","_id":"ck9azt8mm000j6sv5bnb98jca"}],"Tag":[{"name":"next.js","_id":"ck9azt8mf00056sv54gxu19i2"},{"name":"vue","_id":"ck9azt8mi000a6sv574sifraq"},{"name":"flutter","_id":"ck9azt8ml000g6sv59y5o1znz"}]}}